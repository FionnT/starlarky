def _tricode(G, v, u, w):
    """
    Returns the integer code of the given triad.

        This is some fancy magic that comes from Batagelj and Mrvar's paper. It
        treats each edge joining a pair of `v`, `u`, and `w` as a bit in
        the binary representation of an integer.

    
    """
def triadic_census(G):
    """
    Determines the triadic census of a directed graph.

        The triadic census is a count of how many of the 16 possible types of
        triads are present in a directed graph.

        Parameters
        ----------
        G : digraph
           A NetworkX DiGraph

        Returns
        -------
        census : dict
           Dictionary with triad type as keys and number of occurrences as values.

        Notes
        -----
        This algorithm has complexity $O(m)$ where $m$ is the number of edges in
        the graph.

        See also
        --------
        triad_graph

        References
        ----------
        .. [1] Vladimir Batagelj and Andrej Mrvar, A subquadratic triad census
            algorithm for large sparse networks with small maximum degree,
            University of Ljubljana,
            http://vlado.fmf.uni-lj.si/pub/networks/doc/triads/triads.pdf

    
    """
def is_triad(G):
    """
    Returns True if the graph G is a triad, else False.

        Parameters
        ----------
        G : graph
           A NetworkX Graph

        Returns
        -------
        istriad : boolean
           Whether G is a valid triad
    
    """
def all_triplets(G):
    """
    Returns a generator of all possible sets of 3 nodes in a DiGraph.

        Parameters
        ----------
        G : digraph
           A NetworkX DiGraph

        Returns
        -------
        triplets : generator of 3-tuples
           Generator of tuples of 3 nodes
    
    """
def all_triads(G):
    """
    A generator of all possible triads in G.

        Parameters
        ----------
        G : digraph
           A NetworkX DiGraph

        Returns
        -------
        all_triads : generator of DiGraphs
           Generator of triads (order-3 DiGraphs)
    
    """
def triads_by_type(G):
    """
    Returns a list of all triads for each triad type in a directed graph.

        Parameters
        ----------
        G : digraph
           A NetworkX DiGraph

        Returns
        -------
        tri_by_type : dict
           Dictionary with triad types as keys and lists of triads as values.
    
    """
def triad_type(G):
    """
    Returns the sociological triad type for a triad.

        Parameters
        ----------
        G : digraph
           A NetworkX DiGraph with 3 nodes

        Returns
        -------
        triad_type : str
           A string identifying the triad type

        Notes
        -----
        There can be 6 unique edges in a triad (order-3 DiGraph) (so 2^^6=64 unique
        triads given 3 nodes). These 64 triads each display exactly 1 of 16
        topologies of triads (topologies can be permuted). These topologies are
        identified by the following notation:

        {m}{a}{n}{type} (for example: 111D, 210, 102)

        Here:

        {m}     = number of mutual ties (takes 0, 1, 2, 3); a mutual tie is (0,1)
                  AND (1,0)
        {a}     = number of assymmetric ties (takes 0, 1, 2, 3); an assymmetric tie
                  is (0,1) BUT NOT (1,0) or vice versa
        {n}     = number of null ties (takes 0, 1, 2, 3); a null tie is NEITHER
                  (0,1) NOR (1,0)
        {type}  = a letter (takes U, D, C, T) corresponding to up, down, cyclical
                  and transitive. This is only used for topologies that can have
                  more than one form (eg: 021D and 021U).

        References
        ----------
        .. [1] Snijders, T. (2012). "Transitivity and triads." University of
            Oxford.
            http://www.stats.ox.ac.uk/snijders/Trans_Triads_ha.pdf
    
    """
def random_triad(G):
    """
    Returns a random triad from a directed graph.

        Parameters
        ----------
        G : digraph
           A NetworkX DiGraph

        Returns
        -------
        G2 : subgraph
           A randomly selected triad (order-3 NetworkX DiGraph)
    
    """
