def ParserSyntaxError(Exception):
    """

        Contains error information about the parser tree.

        May be raised as an exception.
    
    """
    def __init__(self, message, error_leaf):
        """

            Exception to signal the parser is stuck and error recovery didn't help.
            Basically this shouldn't happen. It's a sign that something is really
            wrong.
    
        """
    def __init__(self, msg, type_, value, start_pos):
        """
        %s: type=%r, value=%r, start_pos=%r
        """
def Stack(list):
    """
     An API just for Jedi.

    """
def StackNode(object):
    """
    '%s(%s, %s)'
    """
def _token_to_transition(grammar, type_, value):
    """
     Map from token to label

    """
def BaseParser(object):
    """
    Parser engine.

        A Parser instance contains state pertaining to the current token
        sequence, and should not be used concurrently by different threads
        to parse separate token sequences.

        See python/tokenize.py for how to get input tokens by a string.

        When a syntax error occurs, error_recovery() is called.
    
    """
    def __init__(self, pgen_grammar, start_nonterminal='file_input', error_recovery=False):
        """
         We never broke out -- EOF is too soon -- Unfinished statement.
         However, the error recovery might have added the token again, if
         the stack is empty, we're fine.

        """
    def error_recovery(self, token):
        """
        Error Recovery is not implemented
        """
    def convert_node(self, nonterminal, children):
        """

                This is the only core function for parsing. Here happens basically
                everything. Everything is well prepared by the parser generator and we
                only apply the necessary steps here.
        
        """
    def _pop(self):
        """
         If there's exactly one child, return that child instead of
         creating a new node.  We still create expr_stmt and
         file_input though, because a lot of Jedi depends on its
         logic.

        """
