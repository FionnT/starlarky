def use_metaclass(meta, *bases):
    """
     Create a class with a metaclass. 
    """
def u(string):
    """
    Cast to unicode DAMMIT!
        Written because Python2 repr always implicitly casts to a string, so we
        have to cast back to a unicode (and we know that we always deal with valid
        unicode, because we check that in the beginning).
    
    """
def utf8_repr(func):
    """

        ``__repr__`` methods in Python 2 don't allow unicode objects to be
        returned. Therefore cast them to utf-8 bytes in this decorator.
    
    """
    def wrapper(self):
        """
        'utf-8'
        """
    def _DirEntry:
    """
     won't follow symlinks

    """
    def scandir(dir):
