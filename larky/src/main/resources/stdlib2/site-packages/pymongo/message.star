def _randint():
    """
    Generate a pseudo random 32 bit integer.
    """
def _maybe_add_read_preference(spec, read_preference):
    """
    Add $readPreference to spec when appropriate.
    """
def _convert_exception(exception):
    """
    Convert an Exception into a failure document for publishing.
    """
def _convert_write_result(operation, command, result):
    """
    Convert a legacy write result to write command format.
    """
2021-03-02 20:50:12,960 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:50:12,960 : INFO : tokenize_signature : --> do i ever get here?
def _gen_find_command(coll, spec, projection, skip, limit, batch_size, options,
                      read_concern, collation=None, session=None,
                      allow_disk_use=None):
    """
    Generate a find command document.
    """
def _gen_get_more_command(cursor_id, coll, batch_size, max_await_time_ms):
    """
    Generate a getMore command document.
    """
def _Query(object):
    """
    A query operation.
    """
2021-03-02 20:50:12,962 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:50:12,962 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:50:12,962 : INFO : tokenize_signature : --> do i ever get here?
    def __init__(self, flags, db, coll, ntoskip, spec, fields,
                 codec_options, read_preference, limit,
                 batch_size, read_concern, collation, session, client,
                 allow_disk_use):
        """
        'find'
        """
    def namespace(self):
        """
        'read concern level of %s is not valid '
        'with a max wire version of %d.'

        """
    def as_command(self, sock_info):
        """
        Return a find command document for this query.
        """
    def get_message(self, set_slave_ok, sock_info, use_cmd=False):
        """
        Get a query message, possibly setting the slaveOk bit.
        """
def _GetMore(object):
    """
    A getmore operation.
    """
2021-03-02 20:50:12,966 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:50:12,967 : INFO : tokenize_signature : --> do i ever get here?
    def __init__(self, db, coll, ntoreturn, cursor_id, codec_options,
                 read_preference, session, client, max_await_time_ms,
                 exhaust_mgr):
        """
        Return a getMore command document for this query.
        """
    def get_message(self, dummy0, sock_info, use_cmd=False):
        """
        Get a getmore message.
        """
def _RawBatchQuery(_Query):
    """
     Compatibility checks.

    """
    def get_message(self, set_slave_ok, sock_info, use_cmd=False):
        """
         Always pass False for use_cmd.

        """
def _RawBatchGetMore(_GetMore):
    """
     Always pass False for use_cmd.

    """
def _CursorAddress(tuple):
    """
    The server address (host, port) of a cursor, with namespace property.
    """
    def __new__(cls, address, namespace):
        """
        The namespace this cursor.
        """
    def __hash__(self):
        """
         Two _CursorAddress instances with different namespaces
         must not hash the same.

        """
    def __eq__(self, other):
        """
        <iiiiiiB
        """
def _compress(operation, data, ctx):
    """
    Takes message data, compresses it, and adds an OP_COMPRESSED header.
    """
def __last_error(namespace, args):
    """
    Data to send to do a lastError.
    
    """
def __pack_message(operation, data):
    """
    Takes message data and adds a message header based on the operation.

        Returns the resultant message string.
    
    """
def _insert(collection_name, docs, check_keys, flags, opts):
    """
    Get an OP_INSERT message
    """
2021-03-02 20:50:12,971 : INFO : tokenize_signature : --> do i ever get here?
def _insert_compressed(
        collection_name, docs, check_keys, continue_on_error, opts, ctx):
    """
    Internal compressed unacknowledged insert message helper.
    """
2021-03-02 20:50:12,971 : INFO : tokenize_signature : --> do i ever get here?
def _insert_uncompressed(collection_name, docs, check_keys,
            safe, last_error_args, continue_on_error, opts):
    """
    Internal insert message helper.
    """
2021-03-02 20:50:12,972 : INFO : tokenize_signature : --> do i ever get here?
def insert(collection_name, docs, check_keys,
           safe, last_error_args, continue_on_error, opts, ctx=None):
    """
    Get an **insert** message.
    """
def _update(collection_name, upsert, multi, spec, doc, check_keys, opts):
    """
    Get an OP_UPDATE message.
    """
2021-03-02 20:50:12,973 : INFO : tokenize_signature : --> do i ever get here?
def _update_compressed(
        collection_name, upsert, multi, spec, doc, check_keys, opts, ctx):
    """
    Internal compressed unacknowledged update message helper.
    """
2021-03-02 20:50:12,973 : INFO : tokenize_signature : --> do i ever get here?
def _update_uncompressed(collection_name, upsert, multi, spec,
                         doc, safe, last_error_args, check_keys, opts):
    """
    Internal update message helper.
    """
2021-03-02 20:50:12,973 : INFO : tokenize_signature : --> do i ever get here?
def update(collection_name, upsert, multi, spec,
           doc, safe, last_error_args, check_keys, opts, ctx=None):
    """
    Get an **update** message.
    """
def _op_msg_no_header(flags, command, identifier, docs, check_keys, opts):
    """
    Get a OP_MSG message.

        Note: this method handles multiple documents in a type one payload but
        it does not perform batch splitting and the total message size is
        only checked *after* generating the entire message.
    
    """
2021-03-02 20:50:12,975 : INFO : tokenize_signature : --> do i ever get here?
def _op_msg_compressed(flags, command, identifier, docs, check_keys, opts,
                       ctx):
    """
    Internal OP_MSG message helper.
    """
def _op_msg_uncompressed(flags, command, identifier, docs, check_keys, opts):
    """
    Internal compressed OP_MSG message helper.
    """
2021-03-02 20:50:12,976 : INFO : tokenize_signature : --> do i ever get here?
def _op_msg(flags, command, dbname, read_preference, slave_ok, check_keys,
            opts, ctx=None):
    """
    Get a OP_MSG message.
    """
2021-03-02 20:50:12,976 : INFO : tokenize_signature : --> do i ever get here?
def _query(options, collection_name, num_to_skip,
           num_to_return, query, field_selector, opts, check_keys):
    """
    Get an OP_QUERY message.
    """
2021-03-02 20:50:12,977 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:50:12,977 : INFO : tokenize_signature : --> do i ever get here?
def _query_compressed(options, collection_name, num_to_skip,
                      num_to_return, query, field_selector,
                      opts, check_keys=False, ctx=None):
    """
    Internal compressed query message helper.
    """
2021-03-02 20:50:12,977 : INFO : tokenize_signature : --> do i ever get here?
def _query_uncompressed(options, collection_name, num_to_skip,
          num_to_return, query, field_selector, opts, check_keys=False):
    """
    Internal query message helper.
    """
2021-03-02 20:50:12,978 : INFO : tokenize_signature : --> do i ever get here?
def query(options, collection_name, num_to_skip, num_to_return,
          query, field_selector, opts, check_keys=False, ctx=None):
    """
    Get a **query** message.
    """
def _get_more(collection_name, num_to_return, cursor_id):
    """
    Get an OP_GET_MORE message.
    """
def _get_more_compressed(collection_name, num_to_return, cursor_id, ctx):
    """
    Internal compressed getMore message helper.
    """
def _get_more_uncompressed(collection_name, num_to_return, cursor_id):
    """
    Internal getMore message helper.
    """
def get_more(collection_name, num_to_return, cursor_id, ctx=None):
    """
    Get a **getMore** message.
    """
def _delete(collection_name, spec, opts, flags):
    """
    Get an OP_DELETE message.
    """
def _delete_compressed(collection_name, spec, opts, flags, ctx):
    """
    Internal compressed unacknowledged delete message helper.
    """
2021-03-02 20:50:12,979 : INFO : tokenize_signature : --> do i ever get here?
def _delete_uncompressed(
        collection_name, spec, safe, last_error_args, opts, flags=0):
    """
    Internal delete message helper.
    """
2021-03-02 20:50:12,980 : INFO : tokenize_signature : --> do i ever get here?
def delete(
        collection_name, spec, safe, last_error_args, opts, flags=0, ctx=None):
    """
    Get a **delete** message.

        `opts` is a CodecOptions. `flags` is a bit vector that may contain
        the SingleRemove flag or not:

        http://docs.mongodb.org/meta-driver/latest/legacy/mongodb-wire-protocol/#op-delete
    
    """
def kill_cursors(cursor_ids):
    """
    Get a **killCursors** message.
    
    """
def _BulkWriteContext(object):
    """
    A wrapper around SocketInfo for use with write splitting functions.
    """
2021-03-02 20:50:12,980 : INFO : tokenize_signature : --> do i ever get here?
    def __init__(self, database_name, command, sock_info, operation_id,
                 listeners, session, op_type, codec):
        """
        '.$cmd'
        """
    def execute(self, docs, client):
        """
         Though this isn't strictly a "legacy" write, the helper
         handles publishing commands and sending our message
         without receiving a result. Send 0 for max_doc_size
         to disable size checking. Size checking is handled while
         the documents are encoded to BSON.

        """
    def check_keys(self):
        """
        Should we check keys for this operation type?
        """
    def max_bson_size(self):
        """
        A proxy for SockInfo.max_bson_size.
        """
    def max_message_size(self):
        """
        A proxy for SockInfo.max_message_size.
        """
    def max_write_batch_size(self):
        """
        A proxy for SockInfo.max_write_batch_size.
        """
    def max_split_size(self):
        """
        The maximum size of a BSON command before batch splitting.
        """
2021-03-02 20:50:12,982 : INFO : tokenize_signature : --> do i ever get here?
    def legacy_bulk_insert(
            self, request_id, msg, max_doc_size, acknowledged, docs, compress):
        """
        A proxy for SocketInfo.legacy_write that handles event publishing.
        
        """
    def write_command(self, request_id, msg, docs):
        """
        A proxy for SocketInfo.write_command that handles event publishing.
        
        """
    def _start(self, request_id, docs):
        """
        Publish a CommandStartedEvent.
        """
    def _succeed(self, request_id, reply, duration):
        """
        Publish a CommandSucceededEvent.
        """
    def _fail(self, request_id, failure, duration):
        """
        Publish a CommandFailedEvent.
        """
def _EncryptedBulkWriteContext(_BulkWriteContext):
    """
    '.$cmd'
    """
    def execute(self, docs, client):
        """
        Reduce the batch splitting size.
        """
def _raise_document_too_large(operation, doc_size, max_size):
    """
    Internal helper for raising DocumentTooLarge.
    """
2021-03-02 20:50:12,986 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:50:12,987 : INFO : tokenize_signature : --> do i ever get here?
def _do_batched_insert(collection_name, docs, check_keys,
                       safe, last_error_args, continue_on_error, opts,
                       ctx):
    """
    Insert `docs` using multiple batches.
    
    """
    def _insert_message(insert_message, send_safe):
        """
        Build the insert message with header and GLE.
        
        """
2021-03-02 20:50:12,988 : INFO : tokenize_signature : --> do i ever get here?
def _batched_op_msg_impl(
        operation, command, docs, check_keys, ack, opts, ctx, buf):
    """
    Create a batched OP_MSG write.
    """
2021-03-02 20:50:12,990 : INFO : tokenize_signature : --> do i ever get here?
def _encode_batched_op_msg(
        operation, command, docs, check_keys, ack, opts, ctx):
    """
    Encode the next batched insert, update, or delete operation
        as OP_MSG.
    
    """
2021-03-02 20:50:12,990 : INFO : tokenize_signature : --> do i ever get here?
def _batched_op_msg_compressed(
        operation, command, docs, check_keys, ack, opts, ctx):
    """
    Create the next batched insert, update, or delete operation
        with OP_MSG, compressed.
    
    """
2021-03-02 20:50:12,990 : INFO : tokenize_signature : --> do i ever get here?
def _batched_op_msg(
        operation, command, docs, check_keys, ack, opts, ctx):
    """
    OP_MSG implementation entry point.
    """
2021-03-02 20:50:12,991 : INFO : tokenize_signature : --> do i ever get here?
def _do_batched_op_msg(
        namespace, operation, command, docs, check_keys, opts, ctx):
    """
    Create the next batched insert, update, or delete operation
        using OP_MSG.
    
    """
2021-03-02 20:50:12,992 : INFO : tokenize_signature : --> do i ever get here?
def _batched_write_command_compressed(
        namespace, operation, command, docs, check_keys, opts, ctx):
    """
    Create the next batched insert, update, or delete command, compressed.
    
    """
2021-03-02 20:50:12,992 : INFO : tokenize_signature : --> do i ever get here?
def _encode_batched_write_command(
        namespace, operation, command, docs, check_keys, opts, ctx):
    """
    Encode the next batched insert, update, or delete command.
    
    """
2021-03-02 20:50:12,992 : INFO : tokenize_signature : --> do i ever get here?
def _batched_write_command(
        namespace, operation, command, docs, check_keys, opts, ctx):
    """
    Create the next batched insert, update, or delete command.
    
    """
2021-03-02 20:50:12,993 : INFO : tokenize_signature : --> do i ever get here?
def _do_batched_write_command(
        namespace, operation, command, docs, check_keys, opts, ctx):
    """
    Batched write commands entry point.
    """
2021-03-02 20:50:12,993 : INFO : tokenize_signature : --> do i ever get here?
def _do_bulk_write_command(
        namespace, operation, command, docs, check_keys, opts, ctx):
    """
    Bulk write commands entry point.
    """
2021-03-02 20:50:12,993 : INFO : tokenize_signature : --> do i ever get here?
def _batched_write_command_impl(
        namespace, operation, command, docs, check_keys, opts, ctx, buf):
    """
    Create a batched OP_QUERY write command.
    """
def _OpReply(object):
    """
    A MongoDB OP_REPLY response message.
    """
    def __init__(self, flags, cursor_id, number_returned, documents):
        """
        Check the response header from the database, without decoding BSON.

                Check the response for errors and unpack.

                Can raise CursorNotFound, NotMasterError, ExecutionTimeout, or
                OperationFailure.

                :Parameters:
                  - `cursor_id` (optional): cursor_id we sent to get this response -
                    used for raising an informative exception when we get cursor id not
                    valid at server response.
        
        """
2021-03-02 20:50:12,996 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:50:12,996 : INFO : tokenize_signature : --> do i ever get here?
    def unpack_response(self, cursor_id=None,
                        codec_options=_UNICODE_REPLACE_CODEC_OPTIONS,
                        user_fields=None, legacy_response=False):
        """
        Unpack a response from the database and decode the BSON document(s).

                Check the response for errors and unpack, returning a dictionary
                containing the response data.

                Can raise CursorNotFound, NotMasterError, ExecutionTimeout, or
                OperationFailure.

                :Parameters:
                  - `cursor_id` (optional): cursor_id we sent to get this response -
                    used for raising an informative exception when we get cursor id not
                    valid at server response
                  - `codec_options` (optional): an instance of
                    :class:`~bson.codec_options.CodecOptions`
        
        """
    def command_response(self):
        """
        Unpack a command response.
        """
    def raw_command_response(self):
        """
        Return the bytes of the command response.
        """
    def more_to_come(self):
        """
        Is the moreToCome bit set on this response?
        """
    def unpack(cls, msg):
        """
        Construct an _OpReply from raw bytes.
        """
def _OpMsg(object):
    """
    A MongoDB OP_MSG response message.
    """
    def __init__(self, flags, payload_document):
        """
        Unpack a OP_MSG command response.

                :Parameters:
                  - `cursor_id` (optional): Ignored, for compatibility with _OpReply.
                  - `codec_options` (optional): an instance of
                    :class:`~bson.codec_options.CodecOptions`
        
        """
    def command_response(self):
        """
        Unpack a command response.
        """
    def raw_command_response(self):
        """
        Return the bytes of the command response.
        """
    def more_to_come(self):
        """
        Is the moreToCome bit set on this response?
        """
    def unpack(cls, msg):
        """
        Construct an _OpMsg from raw bytes.
        """
2021-03-02 20:50:12,999 : INFO : tokenize_signature : --> do i ever get here?
def _first_batch(sock_info, db, coll, query, ntoreturn,
                 slave_ok, codec_options, read_preference, cmd, listeners):
    """
    Simple query helper for retrieving a first (and possibly only) batch.
    """
