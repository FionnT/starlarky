def _WriteResult(object):
    """
    Base class for write result classes.
    """
    def __init__(self, acknowledged):
        """
        Raise an exception on property access if unacknowledged.
        """
    def acknowledged(self):
        """
        Is this the result of an acknowledged write operation?

                The :attr:`acknowledged` attribute will be ``False`` when using
                ``WriteConcern(w=0)``, otherwise ``True``.

                .. note::
                  If the :attr:`acknowledged` attribute is ``False`` all other
                  attibutes of this class will raise
                  :class:`~pymongo.errors.InvalidOperation` when accessed. Values for
                  other attributes cannot be determined if the write operation was
                  unacknowledged.

                .. seealso::
                  :class:`~pymongo.write_concern.WriteConcern`
        
        """
def InsertOneResult(_WriteResult):
    """
    The return type for :meth:`~pymongo.collection.Collection.insert_one`.
    
    """
    def __init__(self, inserted_id, acknowledged):
        """
        The inserted document's _id.
        """
def InsertManyResult(_WriteResult):
    """
    The return type for :meth:`~pymongo.collection.Collection.insert_many`.
    
    """
    def __init__(self, inserted_ids, acknowledged):
        """
        A list of _ids of the inserted documents, in the order provided.

                .. note:: If ``False`` is passed for the `ordered` parameter to
                  :meth:`~pymongo.collection.Collection.insert_many` the server
                  may have inserted the documents in a different order than what
                  is presented here.
        
        """
def UpdateResult(_WriteResult):
    """
    The return type for :meth:`~pymongo.collection.Collection.update_one`,
        :meth:`~pymongo.collection.Collection.update_many`, and
        :meth:`~pymongo.collection.Collection.replace_one`.
    
    """
    def __init__(self, raw_result, acknowledged):
        """
        The raw result document returned by the server.
        """
    def matched_count(self):
        """
        The number of documents matched for this update.
        """
    def modified_count(self):
        """
        The number of documents modified.

                .. note:: modified_count is only reported by MongoDB 2.6 and later.
                  When connected to an earlier server version, or in certain mixed
                  version sharding configurations, this attribute will be set to
                  ``None``.
        
        """
    def upserted_id(self):
        """
        The _id of the inserted document if an upsert took place. Otherwise
                ``None``.
        
        """
def DeleteResult(_WriteResult):
    """
    The return type for :meth:`~pymongo.collection.Collection.delete_one`
        and :meth:`~pymongo.collection.Collection.delete_many`
    """
    def __init__(self, raw_result, acknowledged):
        """
        The raw result document returned by the server.
        """
    def deleted_count(self):
        """
        The number of documents deleted.
        """
def BulkWriteResult(_WriteResult):
    """
    An object wrapper for bulk API write results.
    """
    def __init__(self, bulk_api_result, acknowledged):
        """
        Create a BulkWriteResult instance.

                :Parameters:
                  - `bulk_api_result`: A result dict from the bulk API
                  - `acknowledged`: Was this write result acknowledged? If ``False``
                    then all properties of this object will raise
                    :exc:`~pymongo.errors.InvalidOperation`.
        
        """
    def bulk_api_result(self):
        """
        The raw bulk API result.
        """
    def inserted_count(self):
        """
        The number of documents inserted.
        """
    def matched_count(self):
        """
        The number of documents matched for an update.
        """
    def modified_count(self):
        """
        The number of documents modified.

                .. note:: modified_count is only reported by MongoDB 2.6 and later.
                  When connected to an earlier server version, or in certain mixed
                  version sharding configurations, this attribute will be set to
                  ``None``.
        
        """
    def deleted_count(self):
        """
        The number of documents deleted.
        """
    def upserted_count(self):
        """
        The number of documents upserted.
        """
    def upserted_ids(self):
        """
        A map of operation index to the _id of the upserted document.
        """
