def Response(object):
    """
    '_data'
    """
2021-03-02 20:50:13,171 : INFO : tokenize_signature : --> do i ever get here?
    def __init__(self, data, address, request_id, duration, from_command,
                 docs):
        """
        Represent a response from the server.

                :Parameters:
                  - `data`: A network response message.
                  - `address`: (host, port) of the source server.
                  - `request_id`: The request id of this operation.
                  - `duration`: The duration of the operation.
                  - `from_command`: if the response is the result of a db command.
        
        """
    def data(self):
        """
        Server response's raw BSON bytes.
        """
    def address(self):
        """
        (host, port) of the source server.
        """
    def request_id(self):
        """
        The request id of this operation.
        """
    def duration(self):
        """
        The duration of the operation.
        """
    def from_command(self):
        """
        If the response is a result from a db command.
        """
    def docs(self):
        """
        The decoded document(s).
        """
def ExhaustResponse(Response):
    """
    '_socket_info'
    """
2021-03-02 20:50:13,173 : INFO : tokenize_signature : --> do i ever get here?
    def __init__(self, data, address, socket_info, pool, request_id, duration,
                 from_command, docs):
        """
        Represent a response to an exhaust cursor's initial query.

                :Parameters:
                  - `data`:  A network response message.
                  - `address`: (host, port) of the source server.
                  - `socket_info`: The SocketInfo used for the initial query.
                  - `pool`: The Pool from which the SocketInfo came.
                  - `request_id`: The request id of this operation.
                  - `duration`: The duration of the operation.
                  - `from_command`: If the response is the result of a db command.
        
        """
    def socket_info(self):
        """
        The SocketInfo used for the initial query.

                The server will send batches on this socket, without waiting for
                getMores from the client, until the result set is exhausted or there
                is an error.
        
        """
    def pool(self):
        """
        The Pool from which the SocketInfo came.
        """
