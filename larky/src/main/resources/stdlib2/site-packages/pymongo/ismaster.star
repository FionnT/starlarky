def _get_server_type(doc):
    """
    Determine the server type from an ismaster response.
    """
def IsMaster(object):
    """
    '_doc'
    """
    def __init__(self, doc, awaitable=False):
        """
        Parse an ismaster response from the server.
        """
    def document(self):
        """
        The complete ismaster command response document.

                .. versionadded:: 3.4
        
        """
    def server_type(self):
        """
        List of hosts, passives, and arbiters known to this server.
        """
    def tags(self):
        """
        Replica set member tags or empty dict.
        """
    def primary(self):
        """
        This server's opinion about who the primary is, or None.
        """
    def replica_set_name(self):
        """
        Replica set name or None.
        """
    def max_bson_size(self):
        """
        'maxBsonObjectSize'
        """
    def max_message_size(self):
        """
        'maxMessageSizeBytes'
        """
    def max_write_batch_size(self):
        """
        'maxWriteBatchSize'
        """
    def min_wire_version(self):
        """
        'minWireVersion'
        """
    def max_wire_version(self):
        """
        'maxWireVersion'
        """
    def set_version(self):
        """
        'setVersion'
        """
    def election_id(self):
        """
        'electionId'
        """
    def cluster_time(self):
        """
        '$clusterTime'
        """
    def logical_session_timeout_minutes(self):
        """
        'logicalSessionTimeoutMinutes'
        """
    def is_writable(self):
        """
        'me'
        """
    def last_write_date(self):
        """
        'lastWrite'
        """
    def compressors(self):
        """
        'compression'
        """
    def sasl_supported_mechs(self):
        """
        Supported authentication mechanisms for the current user.

                For example::

                    >>> ismaster.sasl_supported_mechs
                    ["SCRAM-SHA-1", "SCRAM-SHA-256"]

        
        """
    def speculative_authenticate(self):
        """
        The speculativeAuthenticate field.
        """
    def topology_version(self):
        """
        'topologyVersion'
        """
    def awaitable(self):
