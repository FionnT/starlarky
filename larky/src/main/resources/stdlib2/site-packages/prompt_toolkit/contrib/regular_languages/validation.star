def GrammarValidator(Validator):
    """

        Validator which can be used for validation according to variables in
        the grammar. Each variable can have its own validator.

        :param compiled_grammar: `GrammarCompleter` instance.
        :param validators: `dict` mapping variable names of the grammar to the
                           `Validator` instances to be used for each variable.
    
    """
2021-03-02 20:51:42,551 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:51:42,551 : INFO : tokenize_signature : --> do i ever get here?
    def __init__(
        self, compiled_grammar: _CompiledGrammar, validators: Dict[str, Validator]
    ) -> None:
        """
         Parse input document.
         We use `match`, not `match_prefix`, because for validation, we want
         the actual, unambiguous interpretation of the input.

        """
