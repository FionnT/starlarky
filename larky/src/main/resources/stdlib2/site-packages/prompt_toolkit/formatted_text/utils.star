def fragment_list_len(fragments: StyleAndTextTuples) -> int:
    """

        Return the amount of characters in this text fragment list.

        :param fragments: List of ``(style_str, text)`` or
            ``(style_str, text, mouse_handler)`` tuples.
    
    """
def fragment_list_width(fragments: StyleAndTextTuples) -> int:
    """

        Return the character width of this text fragment list.
        (Take double width characters into account.)

        :param fragments: List of ``(style_str, text)`` or
            ``(style_str, text, mouse_handler)`` tuples.
    
    """
def fragment_list_to_text(fragments: StyleAndTextTuples) -> str:
    """

        Concatenate all the text parts again.

        :param fragments: List of ``(style_str, text)`` or
            ``(style_str, text, mouse_handler)`` tuples.
    
    """
def split_lines(fragments: StyleAndTextTuples) -> Iterable[StyleAndTextTuples]:
    """

        Take a single list of (style_str, text) tuples and yield one such list for each
        line. Just like str.split, this will yield at least one item.

        :param fragments: List of (style_str, text) or (style_str, text, mouse_handler)
                          tuples.
    
    """
