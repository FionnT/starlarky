def ANSI:
    """

        ANSI formatted text.
        Take something ANSI escaped text, for use as a formatted string. E.g.

        ::

            ANSI('\\x1b[31mhello \\x1b[32mworld')

        Characters between ``\\001`` and ``\\002`` are supposed to have a zero width
        when printed, but these are literally sent to the terminal output. This can
        be used for instance, for inserting Final Term prompt commands.  They will
        be translated into a prompt_toolkit '[ZeroWidthEscape]' fragment.
    
    """
    def __init__(self, value: str) -> None:
        """
         Default style attributes.

        """
    def _parse_corot(self) -> Generator[None, str, None]:
        """

                Coroutine that parses the ANSI escape sequences.
        
        """
    def _select_graphic_rendition(self, attrs: List[int]) -> None:
        """

                Taken a list of graphics attributes and apply changes.
        
        """
    def _create_style_string(self) -> str:
        """

                Turn current style flags into a string for usage in a formatted text.
        
        """
    def __repr__(self) -> str:
        """
        ANSI(%r)
        """
    def __pt_formatted_text__(self) -> StyleAndTextTuples:
        """
        ANSI
        """
def ansi_escape(text: str) -> str:
    """

        Replace characters with a special meaning.
    
    """
