def _ExplodedList(List[_T]):
    """

        Wrapper around a list, that marks it as 'exploded'.

        As soon as items are added or the list is extended, the new items are
        automatically exploded as well.
    
    """
    def append(self, item: _T) -> None:
        """
         TODO
        """
    def __setitem__(self, index: int, value: _T) -> None:
        """

                Ensure that when `(style_str, 'long string')` is set, the string will be
                exploded.
        
        """
def explode_text_fragments(fragments: Iterable[_T]) -> _ExplodedList[_T]:
    """

        Turn a list of (style_str, text) tuples into another list where each string is
        exactly one character.

        It should be fine to call this function several times. Calling this on a
        list that is already exploded, is a null operation.

        :param fragments: List of (style, text) tuples.
    
    """
