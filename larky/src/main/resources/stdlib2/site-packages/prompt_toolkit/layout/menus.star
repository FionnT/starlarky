def CompletionsMenuControl(UIControl):
    """

        Helper for drawing the complete menu to the screen.

        :param scroll_offset: Number (integer) representing the preferred amount of
            completions to be displayed before and after the current one. When this
            is a very high number, the current completion will be shown in the
            middle most of the time.
    
    """
    def has_focus(self) -> bool:
        """

                Create a UIContent object for this control.
        
        """
            def get_line(i: int) -> StyleAndTextTuples:
                """

                        Return ``True`` if we need to show a column with meta information.
        
                """
    def _get_menu_width(self, max_width: int, complete_state: CompletionState) -> int:
        """

                Return the width of the main column.
        
        """
2021-03-02 20:51:37,235 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:51:37,235 : INFO : tokenize_signature : --> do i ever get here?
    def _get_menu_meta_width(
        self, max_width: int, complete_state: CompletionState
    ) -> int:
        """

                Return the width of the meta column.
        
        """
        def meta_width(completion: Completion) -> int:
            """
            class:completion-menu.meta.completion.current
            """
    def mouse_handler(self, mouse_event: MouseEvent) -> "NotImplementedOrNone":
        """

                Handle mouse events: clicking and scrolling.
        
        """
2021-03-02 20:51:37,237 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:51:37,237 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:51:37,237 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:51:37,237 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:51:37,237 : INFO : tokenize_signature : --> do i ever get here?
def _get_menu_item_fragments(
    completion: Completion,
    is_current_completion: bool,
    width: int,
    space_after: bool = False,
) -> StyleAndTextTuples:
    """

        Get the style/text tuples for a menu item, styled and trimmed to the given
        width.
    
    """
2021-03-02 20:51:37,237 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:51:37,237 : INFO : tokenize_signature : --> do i ever get here?
def _trim_formatted_text(
    formatted_text: StyleAndTextTuples, max_width: int
) -> Tuple[StyleAndTextTuples, int]:
    """

        Trim the text to `max_width`, append dots when the text is too long.
        Returns (text, width) tuple.
    
    """
def CompletionsMenu(ConditionalContainer):
    """
     NOTE: We use a pretty big z_index by default. Menus are supposed to be
           above anything else. We also want to make sure that the content is
           visible at the point where we draw this menu.

    """
2021-03-02 20:51:37,238 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:51:37,238 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:51:37,238 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:51:37,238 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:51:37,238 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:51:37,239 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:51:37,239 : INFO : tokenize_signature : --> do i ever get here?
    def __init__(
        self,
        max_height: Optional[int] = None,
        scroll_offset: Union[int, Callable[[], int]] = 0,
        extra_filter: FilterOrBool = True,
        display_arrows: FilterOrBool = False,
        z_index: int = 10 ** 8,
    ) -> None:
        """
        class:completion-menu
        """
def MultiColumnCompletionMenuControl(UIControl):
    """

        Completion menu that displays all the completions in several columns.
        When there are more completions than space for them to be displayed, an
        arrow is shown on the left or right side.

        `min_rows` indicates how many rows will be available in any possible case.
        When this is larger than one, it will try to use less columns and more
        rows until this value is reached.
        Be careful passing in a too big value, if less than the given amount of
        rows are available, more columns would have been required, but
        `preferred_width` doesn't know about that and reports a too small value.
        This results in less completions displayed and additional scrolling.
        (It's a limitation of how the layout engine currently works: first the
        widths are calculated, then the heights.)

        :param suggested_max_column_width: The suggested max width of a column.
            The column can still be bigger than this, but if there is place for two
            columns of this width, we will display two columns. This to avoid that
            if there is one very wide completion, that it doesn't significantly
            reduce the amount of columns.
    
    """
    def __init__(self, min_rows: int = 3, suggested_max_column_width: int = 30) -> None:
        """
         Info of last rendering.

        """
    def reset(self) -> None:
        """

                Preferred width: prefer to use at least min_rows, but otherwise as much
                as possible horizontally.
        
        """
2021-03-02 20:51:37,240 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:51:37,240 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:51:37,240 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:51:37,241 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:51:37,241 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:51:37,241 : INFO : tokenize_signature : --> do i ever get here?
    def preferred_height(
        self,
        width: int,
        max_available_height: int,
        wrap_lines: bool,
        get_line_prefix: Optional[GetLinePrefixCallable],
    ) -> Optional[int]:
        """

                Preferred height: as much as needed in order to display all the completions.
        
        """
    def create_content(self, width: int, height: int) -> UIContent:
        """

                Create a UIContent object for this menu.
        
        """
2021-03-02 20:51:37,241 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:51:37,242 : INFO : tokenize_signature : --> do i ever get here?
        def grouper(
            n: int, iterable: Iterable[_T], fillvalue: Optional[_T] = None
        ) -> Iterable[List[_T]]:
            """
             grouper(3, 'ABCDEFG', 'x') --> ABC DEF Gxx 
            """
        def is_current_completion(completion: Completion) -> bool:
            """
             Returns True when this completion is the currently selected one. 
            """
        def get_line(i: int) -> StyleAndTextTuples:
            """

                    Return the width of each column.
        
            """
    def mouse_handler(self, mouse_event: MouseEvent) -> Optional["NotImplemented"]:
        """

                Handle scroll and click events.
        
        """
        def scroll_left() -> None:
            """
             Mouse click on left arrow.

            """
    def get_key_bindings(self) -> "KeyBindings":
        """

                Expose key bindings that handle the left/right arrow keys when the menu
                is displayed.
        
        """
        def filter() -> bool:
            """
             Only handle key bindings if this menu is visible. 
            """
        def move(right: bool = False) -> None:
            """
             Calculate new complete index.

            """
        def _left(event: E) -> None:
            """
            right
            """
        def _right(event: E) -> None:
            """

                Container that displays the completions in several columns.
                When `show_meta` (a :class:`~prompt_toolkit.filters.Filter`) evaluates
                to True, it shows the meta information at the bottom.
    
            """
2021-03-02 20:51:37,247 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:51:37,247 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:51:37,247 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:51:37,247 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:51:37,247 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:51:37,247 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:51:37,247 : INFO : tokenize_signature : --> do i ever get here?
    def __init__(
        self,
        min_rows: int = 3,
        suggested_max_column_width: int = 30,
        show_meta: FilterOrBool = True,
        extra_filter: FilterOrBool = True,
        z_index: int = 10 ** 8,
    ) -> None:
        """
         Display filter: show when there are completions but not at the point
         we are returning the input.

        """
        def any_completion_has_meta() -> bool:
            """
             Create child windows.
             NOTE: We don't set style='class:completion-menu' to the
                   `MultiColumnCompletionMenuControl`, because this is used in a
                   Float that is made transparent, and the size of the control
                   doesn't always correspond exactly with the size of the
                   generated content.

            """
def _SelectedCompletionMetaControl(UIControl):
    """

        Control that shows the meta information of the selected completion.
    
    """
    def preferred_width(self, max_available_width: int) -> Optional[int]:
        """

                Report the width of the longest meta text as the preferred width of this control.

                It could be that we use less width, but this way, we're sure that the
                layout doesn't change when we select another completion (E.g. that
                completions are suddenly shown in more or fewer columns.)
        
        """
2021-03-02 20:51:37,248 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:51:37,248 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:51:37,248 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:51:37,248 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:51:37,248 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:51:37,249 : INFO : tokenize_signature : --> do i ever get here?
    def preferred_height(
        self,
        width: int,
        max_available_height: int,
        wrap_lines: bool,
        get_line_prefix: Optional[GetLinePrefixCallable],
    ) -> Optional[int]:
        """
        class:completion-menu.multi-column-meta
        """
