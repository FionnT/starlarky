def Char:
    """

        Represent a single character in a :class:`.Screen`.

        This should be considered immutable.

        :param char: A single character (can be a double-width character).
        :param style: A style string. (Can contain classnames.)
    
    """
    def __init__(self, char: str = " ", style: str = ""):
        """
         If this character has to be displayed otherwise, take that one.

        """
    def __eq__(self, other) -> bool:
        """
         Not equal: We don't do `not char.__eq__` here, because of the
         performance of calling yet another function.

        """
    def __repr__(self) -> str:
        """
        %s(%r, %r)
        """
def Screen:
    """

        Two dimensional buffer of :class:`.Char` instances.
    
    """
2021-03-02 20:51:35,563 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:51:35,563 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:51:35,563 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:51:35,564 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:51:35,564 : INFO : tokenize_signature : --> do i ever get here?
    def __init__(
        self,
        default_char: Optional[Char] = None,
        initial_width: int = 0,
        initial_height: int = 0,
    ) -> None:
        """
 
        """
    def set_cursor_position(self, window: "Window", position: Point) -> None:
        """

                Set the cursor position for a given window.
        
        """
    def set_menu_position(self, window: "Window", position: Point) -> None:
        """

                Set the cursor position for a given window.
        
        """
    def get_cursor_position(self, window: "Window") -> Point:
        """

                Get the cursor position for a given window.
                Returns a `Point`.
        
        """
    def get_menu_position(self, window: "Window") -> Point:
        """

                Get the menu position for a given window.
                (This falls back to the cursor position if no menu position was set.)
        
        """
    def draw_with_z_index(self, z_index: int, draw_func: Callable[[], None]) -> None:
        """

                Add a draw-function for a `Window` which has a >= 0 z_index.
                This will be postponed until `draw_all_floats` is called.
        
        """
    def draw_all_floats(self) -> None:
        """

                Draw all float functions in order of z-index.
        
        """
    def append_style_to_content(self, style_str: str) -> None:
        """

                For all the characters in the screen.
                Set the style string to the given `style_str`.
        
        """
2021-03-02 20:51:35,566 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:51:35,567 : INFO : tokenize_signature : --> do i ever get here?
    def fill_area(
        self, write_position: "WritePosition", style: str = "", after: bool = False
    ) -> None:
        """

                Fill the content of this area, using the given `style`.
                The style is prepended before whatever was here before.
        
        """
def WritePosition:
    """
     xpos and ypos can be negative. (A float can be partially visible.)


    """
    def __repr__(self) -> str:
        """
        %s(x=%r, y=%r, width=%r, height=%r)
        """
