def if_no_repeat(event: E) -> bool:
    """
    Callable that returns True when the previous event was delivered to
        another handler.
    """
def load_basic_bindings() -> KeyBindings:
    """
    c-a
    """
    def _ignore(event: E) -> None:
        """

                First, for any of these keys, Don't do anything by default. Also don't
                catch them in the 'Any' handler which will insert them as data.

                If people want to insert these characters as a literal, they can always
                do by doing a quoted insert. (ControlQ in emacs mode, ControlV in Vi
                mode.)
        
        """
    def has_text_before_cursor() -> bool:
        """
        c-d
        """
    def _newline(event: E) -> None:
        """

                Newline (in case of multiline input.
        
        """
    def _newline2(event: E) -> None:
        """
        r"""
                By default, handle \n as if it were a \r (enter).
                (It appears that some terminals send \n instead of \r when pressing
                enter. - at least the Linux subsystem for Windows.)
        
        """
    def _go_up(event: E) -> None:
        """
        down
        """
    def _go_down(event: E) -> None:
        """
        delete
        """
    def _cut(event: E) -> None:
        """
         Global bindings.


        """
    def _insert_ctrl_z(event: E) -> None:
        """

                By default, control-Z should literally insert Ctrl-Z.
                (Ansi Ctrl-Z, code 26 in MSDOS means End-Of-File.
                In a Python REPL for instance, it's possible to type
                Control-Z followed by enter to quit.)

                When the system bindings are loaded and suspend-to-background is
                supported, that will override this binding.
        
        """
    def _paste(event: E) -> None:
        """

                Pasting from clipboard.
        
        """
    def in_quoted_insert() -> bool:
        """

                Handle quoted insert.
        
        """
