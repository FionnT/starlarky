def Py_buffer(ctypes.Structure):
    """
    buf
    """
    def get_buffer(obj, writable=False):
        """
        cannot read odd number of bytes from UTF-16-LE encoded console

        """
def _WindowsConsoleWriter(_WindowsConsoleRawIOBase):
    """
    ERROR_SUCCESS
    """
    def write(self, b):
        """
        <ConsoleStream name={!r} encoding={!r}>
        """
def WindowsChunkedWriter(object):
    """

        Wraps a stream (such as stdout), acting as a transparent proxy for all
        attribute access apart from method 'write()' which we wrap to write in
        limited chunks due to a Windows limitation on binary console streams.
    
    """
    def __init__(self, wrapped):
        """
         double-underscore everything to prevent clashes with names of
         attributes on the wrapped stream object.

        """
    def __getattr__(self, name):
        """
         Python 2 & Windows 7 and below

        """
def _get_text_stdin(buffer_stream):
    """
    utf-16-le
    """
def _get_text_stdout(buffer_stream):
    """
    utf-16-le
    """
def _get_text_stderr(buffer_stream):
    """
    utf-16-le
    """
    def _hash_py_argv():
        """
        \x00
        """
    def _get_windows_argv():
        """
        frozen
        """
def _is_console(f):
    """
    fileno
    """
def _get_windows_console_stream(f, encoding, errors):
    """
    utf-16-le
    """
