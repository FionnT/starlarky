def _resolve_names(definition_names, avoid_names=()):
    """
     Avoiding recursions here, because goto on a module name lands
     on the same module.

    """
def _dictionarize(names):
    """
     Convert from/to stubs, because those might also be usages.

    """
def _find_names(module_context, tree_name):
    """
     We disable flow analysis, because if we have ifs that are only true in
     certain cases, we want both sides.

    """
def _check_fs(inference_state, file_io, regex):
    """
    'replace'
    """
def gitignored_lines(folder_io, file_io):
    """
    b'#'
    """
def recurse_find_python_folders_and_files(folder_io, except_paths=()):
    """
     Delete folders that we don't want to iterate over.

    """
def recurse_find_python_files(folder_io, except_paths=()):
    """

        Search a name in the directories of modules.

        :param limit_reduction: Divides the limits on opening/parsing files by this
            factor.
    
    """
def search_in_file_ios(inference_state, file_io_iterator, name, limit_reduction=1):
    """
    r'\b'
    """
