def _merge_create_stub_map(path_infos):
    """

        Create a mapping of an importable name in Python to a stub file.
    
    """
    def generate():
        """
         OSError is Python 2

        """
def _get_typeshed_directories(version_info):
    """
    '2and3'
    """
def _cache_stub_file_map(version_info):
    """

        Returns a map of an importable name in Python to a stub file.
    
    """
def import_module_decorator(func):
    """
    'os'
    """
def try_to_load_stub_cached(inference_state, import_names, *args, **kwargs):
    """
     TODO is this needed? where are the exceptions coming from that make this
     necessary? Just remove this line.

    """
2021-03-02 20:49:51,624 : INFO : tokenize_signature : --> do i ever get here?
def _try_to_load_stub(inference_state, import_names, python_value_set,
                      parent_module_value, sys_path):
    """

        Trying to load a stub for a set of import_names.

        This is modelled to work like "PEP 561 -- Distributing and Packaging Type
        Information", see https://www.python.org/dev/peps/pep-0561.
    
    """
def _load_from_typeshed(inference_state, python_value_set, parent_module_value, import_names):
    """
     Only if it's a package (= a folder) something can be
     imported.

    """
def _try_to_load_stub_from_file(inference_state, python_value_set, file_io, import_names):
    """
     IOError is Python 2 only
    """
def parse_stub_module(inference_state, file_io):
    """
    'typing'
    """
