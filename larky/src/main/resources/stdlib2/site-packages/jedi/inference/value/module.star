def _ModuleAttributeName(AbstractNameDefinition):
    """

        For module attributes like __file__, __str__ and so on.
    
    """
    def __init__(self, parent_module, string_name, string_value=None):
        """
        'utf-8'
        """
def SubModuleDictMixin(object):
    """

            Lists modules in the directory of this module (if this module is a
            package).
        
    """
def ModuleMixin(SubModuleDictMixin):
    """
    u'types'
    """
    def is_module(self):
        """
        '__package__'
        """
    def iter_star_filters(self):
        """
         I'm not sure if the star import cache is really that effective anymore
         with all the other really fast import caches. Recheck. Also we would need
         to push the star imports into InferenceState.module_cache, if we reenable this.

        """
    def star_imports(self):
        """

                A module doesn't have a qualified name, but it's important to note that
                it's reachable and not `None`. With this information we can add
                qualified names on top for all value children.
        
        """
def ModuleValue(ModuleMixin, TreeValue):
    """
    u'module'
    """
2021-03-02 20:49:55,719 : INFO : tokenize_signature : --> do i ever get here?
    def __init__(self, inference_state, module_node, code_lines, file_io=None,
                 string_names=None, is_package=False):
        """
         Optional[Tuple[str, ...]]
        """
    def is_stub(self):
        """
        '.pyi'
        """
    def py__name__(self):
        """
        '.'
        """
    def py__file__(self):
        """

                In contrast to Python's __file__ can be None.
        
        """
    def is_package(self):
        """

                In case of a package, this returns Python's __path__ attribute, which
                is a list of paths (strings).
                Returns None if the module is not a package.
        
        """
    def _as_context(self):
        """
        <%s: %s@%s-%s is_stub=%s>
        """
