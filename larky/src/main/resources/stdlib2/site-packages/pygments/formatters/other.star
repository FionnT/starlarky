def NullFormatter(Formatter):
    """

        Output the text unchanged without any formatting.
    
    """
    def format(self, tokensource, outfile):
        """
        r"""
            Format tokens as a raw representation for storing token streams.

            The format is ``tokentype<TAB>repr(tokenstring)\n``. The output can later
            be converted to a token stream with the `RawTokenLexer`, described in the
            :doc:`lexer list <lexers>`.

            Only two options are accepted:

            `compress`
                If set to ``'gz'`` or ``'bz2'``, compress the output with the given
                compression algorithm after encoding (default: ``''``).
            `error_color`
                If set to a color name, highlight error tokens using that color.  If
                set but with no value, defaults to ``'red'``.

                .. versionadded:: 0.11

    
        """
    def __init__(self, **options):
        """
         We ignore self.encoding if it is set, since it gets set for lexer
         and formatter if given with -Oencoding on the command line.
         The RawTokenFormatter outputs only ASCII. Override here.

        """
    def format(self, tokensource, outfile):
        """
        b''
        """
            def write(text):
                """
                'bz2'
                """
            def write(text):
                """
                %s\t%r\n
                """
def TestcaseFormatter(Formatter):
    """

        Format tokens as appropriate for a new testcase.

        .. versionadded:: 2.0
    
    """
    def __init__(self, **options):
        """
        'utf-8'
        """
    def format(self, tokensource, outfile):
        """
        ' '
        """
