def TerminalFormatter(Formatter):
    """
    r"""
        Format tokens with ANSI color sequences, for output in a text console.
        Color sequences are terminated at newlines, so that paging the output
        works correctly.

        The `get_style_defs()` method doesn't do anything special since there is
        no support for common styles.

        Options accepted:

        `bg`
            Set to ``"light"`` or ``"dark"`` depending on the terminal's background
            (default: ``"light"``).

        `colorscheme`
            A dictionary mapping token types to (lightbg, darkbg) color names or
            ``None`` (default: ``None`` = use builtin colorscheme).

        `linenos`
            Set to ``True`` to have line numbers on the terminal output as well
            (default: ``False`` = no line numbers).
    
    """
    def __init__(self, **options):
        """
        'bg'
        """
    def format(self, tokensource, outfile):
        """
        %s%04d: 
        """
    def _get_color(self, ttype):
        """
         self.colorscheme is a dict containing usually generic types, so we
         have to walk the tree of dots.  The base Token type must be a key,
         even if it's empty string, as in the default above.

        """
    def format_unencoded(self, tokensource, outfile):
        """
        '\n'
        """
