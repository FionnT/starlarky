def EndOfText(RuntimeError):
    """

        Raise if end of text is reached and the user
        tried to call a match function.
    
    """
def Scanner:
    """

        Simple scanner

        All method patterns are regular expression strings (not
        compiled expressions!)
    
    """
    def __init__(self, text, flags=0):
        """

                :param text:    The text which should be scanned
                :param flags:   default regular expression flags
        
        """
    def eos(self):
        """
        `True` if the scanner reached the end of text.
        """
    def check(self, pattern):
        """

                Apply `pattern` on the current position and return
                the match object. (Doesn't touch pos). Use this for
                lookahead.
        
        """
    def test(self, pattern):
        """
        Apply a pattern on the current position and check
                if it patches. Doesn't touch pos.
        
        """
    def scan(self, pattern):
        """

                Scan the text for the given pattern and update pos/match
                and related fields. The return value is a boolen that
                indicates if the pattern matched. The matched value is
                stored on the instance as ``match``, the last value is
                stored as ``last``. ``start_pos`` is the position of the
                pointer before the pattern was matched, ``pos`` is the
                end position.
        
        """
    def get_char(self):
        """
        Scan exactly one char.
        """
    def __repr__(self):
        """
        '<%s %d/%d>'
        """
