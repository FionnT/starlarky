def RagelLexer(RegexLexer):
    """

        A pure `Ragel <http://www.complang.org/ragel/>`_ lexer.  Use this for
        fragments of Ragel.  For ``.rl`` files, use RagelEmbeddedLexer instead
        (or one of the language-specific subclasses).

        .. versionadded:: 1.1
    
    """
def RagelEmbeddedLexer(RegexLexer):
    """

        A lexer for `Ragel`_ embedded in a host language file.

        This will only highlight Ragel statements. If you want host language
        highlighting then call the language-specific Ragel lexer.

        .. versionadded:: 1.1
    
    """
    def analyse_text(text):
        """
        '@LANG: indep'
        """
def RagelRubyLexer(DelegatingLexer):
    """

        A lexer for `Ragel`_ in a Ruby host file.

        .. versionadded:: 1.1
    
    """
    def __init__(self, **options):
        """
        '@LANG: ruby'
        """
def RagelCLexer(DelegatingLexer):
    """

        A lexer for `Ragel`_ in a C host file.

        .. versionadded:: 1.1
    
    """
    def __init__(self, **options):
        """
        '@LANG: c'
        """
def RagelDLexer(DelegatingLexer):
    """

        A lexer for `Ragel`_ in a D host file.

        .. versionadded:: 1.1
    
    """
    def __init__(self, **options):
        """
        '@LANG: d'
        """
def RagelCppLexer(DelegatingLexer):
    """

        A lexer for `Ragel`_ in a CPP host file.

        .. versionadded:: 1.1
    
    """
    def __init__(self, **options):
        """
        '@LANG: c++'
        """
def RagelObjectiveCLexer(DelegatingLexer):
    """

        A lexer for `Ragel`_ in an Objective C host file.

        .. versionadded:: 1.1
    
    """
    def __init__(self, **options):
        """
        '@LANG: objc'
        """
def RagelJavaLexer(DelegatingLexer):
    """

        A lexer for `Ragel`_ in a Java host file.

        .. versionadded:: 1.1
    
    """
    def __init__(self, **options):
        """
        '@LANG: java'
        """
def AntlrLexer(RegexLexer):
    """

        Generic `ANTLR`_ Lexer.
        Should not be called directly, instead
        use DelegatingLexer for your target language.

        .. versionadded:: 1.1

        .. _ANTLR: http://www.antlr.org/
    
    """
    def analyse_text(text):
        """
        r'^\s*grammar\s+[a-zA-Z0-9]+\s*;'
        """
def AntlrCppLexer(DelegatingLexer):
    """

        `ANTLR`_ with CPP Target

        .. versionadded:: 1.1
    
    """
    def __init__(self, **options):
        """
        r'^\s*language\s*=\s*C\s*;'
        """
def AntlrObjectiveCLexer(DelegatingLexer):
    """

        `ANTLR`_ with Objective-C Target

        .. versionadded:: 1.1
    
    """
    def __init__(self, **options):
        """
        r'^\s*language\s*=\s*ObjC\s*;'
        """
def AntlrCSharpLexer(DelegatingLexer):
    """

        `ANTLR`_ with C# Target

        .. versionadded:: 1.1
    
    """
    def __init__(self, **options):
        """
        r'^\s*language\s*=\s*CSharp2\s*;'
        """
def AntlrPythonLexer(DelegatingLexer):
    """

        `ANTLR`_ with Python Target

        .. versionadded:: 1.1
    
    """
    def __init__(self, **options):
        """
        r'^\s*language\s*=\s*Python\s*;'
        """
def AntlrJavaLexer(DelegatingLexer):
    """

        `ANTLR`_ with Java Target

        .. versionadded:: 1.
    
    """
    def __init__(self, **options):
        """
         Antlr language is Java by default

        """
def AntlrRubyLexer(DelegatingLexer):
    """

        `ANTLR`_ with Ruby Target

        .. versionadded:: 1.1
    
    """
    def __init__(self, **options):
        """
        r'^\s*language\s*=\s*Ruby\s*;'
        """
def AntlrPerlLexer(DelegatingLexer):
    """

        `ANTLR`_ with Perl Target

        .. versionadded:: 1.1
    
    """
    def __init__(self, **options):
        """
        r'^\s*language\s*=\s*Perl5\s*;'
        """
def AntlrActionScriptLexer(DelegatingLexer):
    """

        `ANTLR`_ with ActionScript Target

        .. versionadded:: 1.1
    
    """
    def __init__(self, **options):
        """
        r'^\s*language\s*=\s*ActionScript\s*;'
        """
def TreetopBaseLexer(RegexLexer):
    """

        A base lexer for `Treetop <http://treetop.rubyforge.org/>`_ grammars.
        Not for direct use; use TreetopLexer instead.

        .. versionadded:: 1.6
    
    """
def TreetopLexer(DelegatingLexer):
    """

        A lexer for `Treetop <http://treetop.rubyforge.org/>`_ grammars.

        .. versionadded:: 1.6
    
    """
    def __init__(self, **options):
        """

            Lexer for `ISO/IEC 14977 EBNF
            <http://en.wikipedia.org/wiki/Extended_Backus%E2%80%93Naur_Form>`_
            grammars.

            .. versionadded:: 2.0
    
        """
