def PikeLexer(CppLexer):
    """

        For `Pike <http://pike.lysator.liu.se/>`_ source code.

        .. versionadded:: 2.0
    
    """
def NesCLexer(CLexer):
    """

        For `nesC <https://github.com/tinyos/nesc>`_ source code with preprocessor
        directives.

        .. versionadded:: 2.0
    
    """
def ClayLexer(RegexLexer):
    """

        For `Clay <http://claylabs.com/clay/>`_ source.

        .. versionadded:: 2.0
    
    """
def ECLexer(CLexer):
    """

        For eC source code with preprocessor directives.

        .. versionadded:: 1.5
    
    """
def ValaLexer(RegexLexer):
    """

        For Vala source code with preprocessor directives.

        .. versionadded:: 1.1
    
    """
def CudaLexer(CLexer):
    """

        For NVIDIA `CUDA™ <http://developer.nvidia.com/category/zone/cuda-zone>`_
        source.

        .. versionadded:: 1.6
    
    """
    def get_tokens_unprocessed(self, text):
        """

            For `SWIG <http://www.swig.org/>`_ source code.

            .. versionadded:: 2.0
    
        """
    def analyse_text(text):
        """
         Search for SWIG directives, which are conventionally at the beginning of
         a line. The probability of them being within a line is low, so let another
         lexer win in this case.

        """
def MqlLexer(CppLexer):
    """

        For `MQL4 <http://docs.mql4.com/>`_ and
        `MQL5 <http://www.mql5.com/en/docs>`_ source code.

        .. versionadded:: 2.0
    
    """
def ArduinoLexer(CppLexer):
    """

        For `Arduino(tm) <https://arduino.cc/>`_ source.

        This is an extension of the CppLexer, as the Arduino® Language is a superset
        of C++

        .. versionadded:: 2.1
    
    """
    def get_tokens_unprocessed(self, text):
        """

            For `Charm++ <https://charm.cs.illinois.edu>`_ interface files (.ci).

            .. versionadded:: 2.4
    
        """
