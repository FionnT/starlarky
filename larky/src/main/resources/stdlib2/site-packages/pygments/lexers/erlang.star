def ErlangLexer(RegexLexer):
    """

        For the Erlang functional programming language.

        Blame Jeremy Thurgood (http://jerith.za.net/).

        .. versionadded:: 0.9
    
    """
def ErlangShellLexer(Lexer):
    """

        Shell sessions in erl (for Erlang code).

        .. versionadded:: 1.1
    
    """
    def get_tokens_unprocessed(self, text):
        """
        ''
        """
def gen_elixir_string_rules(name, symbol, token):
    """
    'string_'
    """
def gen_elixir_sigstr_rules(term, term_class, token, interpol=True):
    """
    r'[^#%s\\]+'
    """
def ElixirLexer(RegexLexer):
    """

        For the `Elixir language <http://elixir-lang.org>`_.

        .. versionadded:: 1.5
    
    """
    def get_tokens_unprocessed(self, text):
        """
         all valid sigil terminators (excluding heredocs)

        """
def ElixirConsoleLexer(Lexer):
    """

        For Elixir interactive console (iex) output like:

        .. sourcecode:: iex

            iex> [head | tail] = [1,2,3]
            [1,2,3]
            iex> head
            1
            iex> tail
            [2,3]
            iex> [head | tail]
            [1,2,3]
            iex> length [head | tail]
            3

        .. versionadded:: 1.5
    
    """
    def get_tokens_unprocessed(self, text):
        """
        ''
        """
