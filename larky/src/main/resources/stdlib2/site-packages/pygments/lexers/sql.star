def language_callback(lexer, match):
    """
    Parse the content of a $-string using a lexer

        The lexer is chosen looking for a nearby LANGUAGE or assumed as
        plpgsql if inside a DO statement and no LANGUAGE has been found.
    
    """
def PostgresBase:
    """
    Base class for Postgres-related lexers.

        This is implemented as a mixin to avoid the Lexer metaclass kicking in.
        this way the different lexer don't have a common Lexer ancestor. If they
        had, _tokens could be created on this ancestor and not updated for the
        other classes, resulting e.g. in PL/pgSQL parsed as SQL. This shortcoming
        seem to suggest that regexp lexers are not really subclassable.
    
    """
    def get_tokens_unprocessed(self, text, *args):
        """
         Have a copy of the entire text to be used by `language_callback`.

        """
    def _get_lexer(self, lang):
        """
        'sql'
        """
def PostgresLexer(PostgresBase, RegexLexer):
    """

        Lexer for the PostgreSQL dialect of SQL.

        .. versionadded:: 1.5
    
    """
def PlPgsqlLexer(PostgresBase, RegexLexer):
    """

        Handle the extra syntax in Pl/pgSQL language.

        .. versionadded:: 1.5
    
    """
def PsqlRegexLexer(PostgresBase, RegexLexer):
    """

        Extend the PostgresLexer adding support specific for psql commands.

        This is not a complete psql lexer yet as it lacks prompt support
        and output rendering.
    
    """
def lookahead:
    """
    Wrap an iterator and allow pushing back an item.
    """
    def __init__(self, x):
        """

            Lexer for psql sessions.

            .. versionadded:: 1.5
    
        """
    def get_tokens_unprocessed(self, data):
        """
         prompt-output cycle

        """
def SqlLexer(RegexLexer):
    """

        Lexer for Structured Query Language. Currently, this lexer does
        not recognize any special syntax except ANSI SQL.
    
    """
    def analyse_text(text):
        """

            Transact-SQL (T-SQL) is Microsoft's and Sybase's proprietary extension to
            SQL.

            The list of keywords includes ODBC and keywords reserved for future use..
    
        """
    def analyse_text(text):
        """
         Found T-SQL variable declaration.

        """
def MySqlLexer(RegexLexer):
    """
    The Oracle MySQL lexer.

        This lexer does not attempt to maintain strict compatibility with
        MariaDB syntax or keywords. Although MySQL and MariaDB's common code
        history suggests there may be significant overlap between the two,
        compatibility between the two is not a target for this lexer.
    
    """
    def analyse_text(text):
        """
         Same logic as above in the TSQL analysis

        """
def SqliteConsoleLexer(Lexer):
    """

        Lexer for example sessions using sqlite3.

        .. versionadded:: 0.11
    
    """
    def get_tokens_unprocessed(self, data):
        """
        ''
        """
def RqlLexer(RegexLexer):
    """

        Lexer for Relation Query Language.

        `RQL <http://www.logilab.org/project/rql>`_

        .. versionadded:: 2.0
    
    """
