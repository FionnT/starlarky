def ProtoBufLexer(RegexLexer):
    """

        Lexer for `Protocol Buffer <http://code.google.com/p/protobuf/>`_
        definition files.

        .. versionadded:: 1.4
    
    """
def ThriftLexer(RegexLexer):
    """

        For `Thrift <https://thrift.apache.org/>`__ interface definitions.

        .. versionadded:: 2.1
    
    """
def ZeekLexer(RegexLexer):
    """

        For `Zeek <https://www.zeek.org/>`_ scripts.

        .. versionadded:: 2.5
    
    """
def PuppetLexer(RegexLexer):
    """

        For `Puppet <http://puppetlabs.com/>`__ configuration DSL.

        .. versionadded:: 1.6
    
    """
def RslLexer(RegexLexer):
    """

        `RSL <http://en.wikipedia.org/wiki/RAISE>`_ is the formal specification
        language used in RAISE (Rigorous Approach to Industrial Software Engineering)
        method.

        .. versionadded:: 2.0
    
    """
    def analyse_text(text):
        """

                Check for the most common text in the beginning of a RSL file.
        
        """
def MscgenLexer(RegexLexer):
    """

        For `Mscgen <http://www.mcternan.me.uk/mscgen/>`_ files.

        .. versionadded:: 1.6
    
    """
def VGLLexer(RegexLexer):
    """

        For `SampleManager VGL <http://www.thermoscientific.com/samplemanager>`_
        source code.

        .. versionadded:: 1.6
    
    """
def AlloyLexer(RegexLexer):
    """

        For `Alloy <http://alloy.mit.edu>`_ source code.

        .. versionadded:: 2.0
    
    """
def PanLexer(RegexLexer):
    """

        Lexer for `pan <https://github.com/quattor/pan/>`_ source files.

        Based on tcsh lexer.

        .. versionadded:: 2.0
    
    """
def CrmshLexer(RegexLexer):
    """

        Lexer for `crmsh <http://crmsh.github.io/>`_ configuration files
        for Pacemaker clusters.

        .. versionadded:: 2.1
    
    """
def FlatlineLexer(RegexLexer):
    """

        Lexer for `Flatline <https://github.com/bigmlcom/flatline>`_ expressions.

        .. versionadded:: 2.2
    
    """
def SnowballLexer(ExtendedRegexLexer):
    """

        Lexer for `Snowball <http://snowballstem.org/>`_ source code.

        .. versionadded:: 2.2
    
    """
    def __init__(self, **options):
        """
        '
        """
    def _string(do_string_first):
        """
        r'([^%s]*)(.)'
        """
    def _stringescapes(lexer, match, ctx):
        """
        'root'
        """
    def get_tokens_unprocessed(self, text=None, context=None):
