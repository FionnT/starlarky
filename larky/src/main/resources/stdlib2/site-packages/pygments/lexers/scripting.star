def LuaLexer(RegexLexer):
    """

        For `Lua <http://www.lua.org>`_ source code.

        Additional options accepted:

        `func_name_highlighting`
            If given and ``True``, highlight builtin function names
            (default: ``True``).
        `disabled_modules`
            If given, must be a list of module names whose function names
            should not be highlighted. By default all modules are highlighted.

            To get a list of allowed modules have a look into the
            `_lua_builtins` module:

            .. sourcecode:: pycon

                >>> from pygments.lexers._lua_builtins import MODULES
                >>> MODULES.keys()
                ['string', 'coroutine', 'modules', 'io', 'basic', ...]
    
    """
    def __init__(self, **options):
        """
        'func_name_highlighting'
        """
    def get_tokens_unprocessed(self, text):
        """
        '.'
        """
def MoonScriptLexer(LuaLexer):
    """

        For `MoonScript <http://moonscript.org>`_ source code.

        .. versionadded:: 1.5
    
    """
    def get_tokens_unprocessed(self, text):
        """
         set . as Operator instead of Punctuation

        """
def ChaiscriptLexer(RegexLexer):
    """

        For `ChaiScript <http://chaiscript.com/>`_ source code.

        .. versionadded:: 2.0
    
    """
def LSLLexer(RegexLexer):
    """

        For Second Life's Linden Scripting Language source code.

        .. versionadded:: 2.0
    
    """
def AppleScriptLexer(RegexLexer):
    """

        For `AppleScript source code
        <http://developer.apple.com/documentation/AppleScript/
        Conceptual/AppleScriptLangGuide>`_,
        including `AppleScript Studio
        <http://developer.apple.com/documentation/AppleScript/
        Reference/StudioReference>`_.
        Contributed by Andreas Amann <aamann@mac.com>.

        .. versionadded:: 1.0
    
    """
def RexxLexer(RegexLexer):
    """

        `Rexx <http://www.rexxinfo.org/>`_ is a scripting language available for
        a wide range of different platforms with its roots found on mainframe
        systems. It is popular for I/O- and data based tasks and can act as glue
        language to bind different applications together.

        .. versionadded:: 2.0
    
    """
    def analyse_text(text):
        """

                Check for inital comment and patterns that distinguish Rexx from other
                C-like languages.
        
        """
def MOOCodeLexer(RegexLexer):
    """

        For `MOOCode <http://www.moo.mud.org/>`_ (the MOO scripting
        language).

        .. versionadded:: 0.9
    
    """
def HybrisLexer(RegexLexer):
    """

        For `Hybris <http://www.hybris-lang.org>`_ source code.

        .. versionadded:: 1.4
    
    """
def EasytrieveLexer(RegexLexer):
    """

        Easytrieve Plus is a programming language for extracting, filtering and
        converting sequential data. Furthermore it can layout data for reports.
        It is mainly used on mainframe platforms and can access several of the
        mainframe's native file formats. It is somewhat comparable to awk.

        .. versionadded:: 2.1
    
    """
    def analyse_text(text):
        """

                Perform a structural analysis for basic Easytrieve constructs.
        
        """
        def isCommentLine(line):
            """
             Remove possible empty lines and header comments.

            """
def JclLexer(RegexLexer):
    """

        `Job Control Language (JCL)
        <http://publibz.boulder.ibm.com/cgi-bin/bookmgr_OS390/BOOKS/IEA2B570/CCONTENTS>`_
        is a scripting language used on mainframe platforms to instruct the system
        on how to run a batch job or start a subsystem. It is somewhat
        comparable to MS DOS batch and Unix shell scripts.

        .. versionadded:: 2.1
    
    """
    def analyse_text(text):
        """

                Recognize JCL job by header.
        
        """
def MiniScriptLexer(RegexLexer):
    """

        For `MiniScript <https://miniscript.org>`_ source code.

        .. versionadded:: 2.6
    
    """
