def Writer(Component):
    """

        Abstract base class for docutils Writers.

        Each writer module or package must export a subclass also called 'Writer'.
        Each writer must support all standard node types listed in
        `docutils.nodes.node_class_names`.

        The `write()` method is the main entry point.
    
    """
    def get_transforms(self):
        """
        The document to write (Docutils doctree); set by `write`.
        """
    def __init__(self):
        """
         Used by HTML and LaTeX writer for output fragments:

        """
    def write(self, document, destination):
        """

                Process a document into its final form.

                Translate `document` (a Docutils document tree) into the Writer's
                native format, and write it out to its `destination` (a
                `docutils.io.Output` subclass object).

                Normally not overridden or extended in subclasses.
        
        """
    def translate(self):
        """

                Do final translation of `self.document` into `self.output`.  Called
                from `write`.  Override in subclasses.

                Usually done with a `docutils.nodes.NodeVisitor` subclass, in
                combination with a call to `docutils.nodes.Node.walk()` or
                `docutils.nodes.Node.walkabout()`.  The ``NodeVisitor`` subclass must
                support all standard elements (listed in
                `docutils.nodes.node_class_names`) and possibly non-standard elements
                used by the current Reader as well.
        
        """
    def assemble_parts(self):
        """
        Assemble the `self.parts` dictionary.  Extend in subclasses.
        """
def UnfilteredWriter(Writer):
    """

        A writer that passes the document tree on unchanged (e.g. a
        serializer.)

        Documents written by UnfilteredWriters are typically reused at a
        later date using a subclass of `readers.ReReader`.
    
    """
    def get_transforms(self):
        """
         Do not add any transforms.  When the document is reused
         later, the then-used writer will add the appropriate
         transforms.

        """
def get_writer_class(writer_name):
    """
    Return the Writer class from the `writer_name` module.
    """
