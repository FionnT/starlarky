def Include(Directive):
    """

        Include content read from a separate source file.

        Content may be parsed by the parser, or included as a literal
        block.  The encoding of the included file can be specified.  Only
        a part of the given file argument may be included by specifying
        start and end line or text to match before and/or after the text
        to be used.
    
    """
    def run(self):
        """
        Include a file as part of the content of this reST file.
        """
def Raw(Directive):
    """

        Pass through content unchanged

        Content is included in output based on type argument

        Content may be included inline (content section of directive) or
        imported from a file or url.
    
    """
    def run(self):
        """
        'file'
        """
def Replace(Directive):
    """
    'Invalid context: the "%s" directive can only be used within '
    'a substitution definition.'
    """
def Unicode(Directive):
    """
    r"""
        Convert Unicode character codes (numbers) to characters.  Codes may be
        decimal numbers, hexadecimal numbers (prefixed by ``0x``, ``x``, ``\x``,
        ``U+``, ``u``, or ``\u``; e.g. ``U+262E``), or XML-style numeric character
        entities (e.g. ``&#x262E;``).  Text following ".." is a comment and is
        ignored.  Spaces are ignored, and any other text remains as-is.
    
    """
    def run(self):
        """
        'Invalid context: the "%s" directive can only be used within '
        'a substitution definition.'
        """
def Class(Directive):
    """

        Set a "class" attribute on the directive content or the next element.
        When applied to the next element, a "pending" element is inserted, and a
        transform does the work later.
    
    """
    def run(self):
        """
        'Invalid class attribute value for "%s" directive: "%s".'

        """
def Role(Directive):
    """
    r'(%s)\s*(\(\s*(%s)\s*\)\s*)?$'

    """
    def run(self):
        """
        Dynamically create and register a custom interpreted text role.
        """
def DefaultRole(Directive):
    """
    Set the default interpreted text role.
    """
    def run(self):
        """
        ''
        """
def Title(Directive):
    """
    'title'
    """
def Date(Directive):
    """
    'Invalid context: the "%s" directive can only be used within '
    'a substitution definition.'
    """
def TestDirective(Directive):
    """
    This directive is useful only for testing purposes.
    """
    def run(self):
        """
        '\n'
        """
