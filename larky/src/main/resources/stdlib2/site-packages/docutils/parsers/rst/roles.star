def role(role_name, language_module, lineno, reporter):
    """

        Locate and return a role function from its language-dependent name, along
        with a list of system messages.  If the role is not found in the current
        language, check English.  Return a 2-tuple: role function (``None`` if the
        named role cannot be found) and a list of system messages.
    
    """
def register_canonical_role(name, role_fn):
    """

        Register an interpreted text role by its canonical name.

        :Parameters:
          - `name`: The canonical name of the interpreted role.
          - `role_fn`: The role function.  See the module docstring.
    
    """
def register_local_role(name, role_fn):
    """

        Register an interpreted text role by its local or language-dependent name.

        :Parameters:
          - `name`: The local or language-dependent name of the interpreted role.
          - `role_fn`: The role function.  See the module docstring.
    
    """
def set_implicit_options(role_fn):
    """

        Add customization options to role functions, unless explicitly set or
        disabled.
    
    """
def register_generic_role(canonical_name, node_class):
    """
    For roles which simply wrap a given `node_class` around the text.
    """
def GenericRole(object):
    """

        Generic interpreted text role, where the interpreted text is simply
        wrapped with the provided node class.
    
    """
    def __init__(self, role_name, node_class):
        """

            Wrapper for custom interpreted text roles.
    
        """
    def __init__(self, role_name, base_role, options={}, content=[]):
        """
        'options'
        """
2021-03-02 20:48:50,589 : INFO : tokenize_signature : --> do i ever get here?
    def __call__(self, role, rawtext, text, lineno, inliner,
                 options={}, content=[]):
        """
        '\n'
        """
2021-03-02 20:48:50,590 : INFO : tokenize_signature : --> do i ever get here?
def generic_custom_role(role, rawtext, text, lineno, inliner,
                        options={}, content=[]):
    """

    """
2021-03-02 20:48:50,590 : INFO : tokenize_signature : --> do i ever get here?
def pep_reference_role(role, rawtext, text, lineno, inliner,
                       options={}, content=[]):
    """
    'PEP number must be a number from 0 to 9999; "%s" is invalid.'

    """
2021-03-02 20:48:50,591 : INFO : tokenize_signature : --> do i ever get here?
def rfc_reference_role(role, rawtext, text, lineno, inliner,
                       options={}, content=[]):
    """

    """
def raw_role(role, rawtext, text, lineno, inliner, options={}, content=[]):
    """
    'raw (and derived) roles disabled'
    """
def code_role(role, rawtext, text, lineno, inliner, options={}, content=[]):
    """
    'language'
    """
def math_role(role, rawtext, text, lineno, inliner, options={}, content=[]):
    """
    '`'
    """
def unimplemented_role(role, rawtext, text, lineno, inliner, attributes={}):
    """
    'Interpreted text role "%s" not implemented.'
    """
def set_classes(options):
    """

        Auxiliary function to set options['classes'] and delete
        options['class'].
    
    """
