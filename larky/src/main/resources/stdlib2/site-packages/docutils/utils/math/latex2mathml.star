def math(object):
    """
    Base class for MathML elements.
    """
    def __init__(self, children=None, inline=None):
        """
        math([children]) -> MathML element

                children can be one child or a list of children.
        """
    def __repr__(self):
        """
        'children'
        """
    def full(self):
        """
        Room for more children?
        """
    def append(self, child):
        """
        append(child) -> element

                Appends child and returns self if self is not full or first
                non-full parent.
        """
    def delete_child(self):
        """
        delete_child() -> child

                Delete last child and return it.
        """
    def close(self):
        """
        close() -> parent

                Close element and return first non-full element.
        """
    def xml(self):
        """
        xml() -> xml-string
        """
    def xml_start(self):
        """
        'inline'
        """
    def xml_end(self):
        """
        '</%s>'
        """
    def xml_body(self):
        """
        '\n<%s>'
        """
def mtable(math):
    """
    '\n<%s>'
    """
def mtr(mrow): pass
    """
    Base class for mo, mi, and mn
    """
    def __init__(self, data):
        """
        '<'
        """
    def xml_body(self):
        """
                    self.children[1:3] = self.children[2:0:-1]

        """
def mfenced(math):
    """
    '\\{'
    """
    def __init__(self, par):
        """
        '<mfenced open="%s" close="%s">'
        """
def mspace(math):
    """
    '<mstyle '
    """
def mover(math):
    """
    parse_latex_math(string [,inline]) -> MathML-tree

        Returns a MathML-tree parsed from string.  inline=True is for
        inline math and inline=False is for displayed math.

        tree is the whole tree and node is the current element.
    """
def handle_keyword(name, node, string):
    """
    ' '
    """
def tex2mathml(tex_math, inline=True):
    """
    Return string with MathML code corresponding to `tex_math`.

        `inline`=True is for inline math and `inline`=False for displayed math.
    
    """
