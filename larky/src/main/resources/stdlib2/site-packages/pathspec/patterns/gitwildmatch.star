def GitWildMatchPattern(RegexPattern):
    """

    	The :class:`GitWildMatchPattern` class represents a compiled Git
    	wildmatch pattern.
	
    """
	def pattern_to_regex(cls, pattern):
    """

    		Convert the pattern into a regular expression.

    		*pattern* (:class:`unicode` or :class:`bytes`) is the pattern to
    		convert into a regular expression.

    		Returns the uncompiled regular expression (:class:`unicode`, :class:`bytes`,
    		or :data:`None`), and whether matched files should be included
    		(:data:`True`), excluded (:data:`False`), or if it is a
    		null-operation (:data:`None`).
		
    """
	def _translate_segment_glob(pattern):
    """

    		Translates the glob pattern to a regular expression. This is used in
    		the constructor to translate a path segment glob pattern to its
    		corresponding regular expression.

    		*pattern* (:class:`str`) is the glob pattern.

    		Returns the regular expression (:class:`str`).
		
    """
	def escape(s):
    """

    		Escape special characters in the given string.

    		*s* (:class:`unicode` or :class:`bytes`) a filename or a string
    		that you want to escape, usually before adding it to a `.gitignore`

    		Returns the escaped string (:class:`unicode`, :class:`bytes`)
		
    """
def GitIgnorePattern(GitWildMatchPattern):
    """

    	The :class:`GitIgnorePattern` class is deprecated by :class:`GitWildMatchPattern`.
    	This class only exists to maintain compatibility with v0.4.
	
    """
	def __init__(self, *args, **kw):
    """

    		Warn about deprecation.
		
    """
	def _deprecated():
    """

    		Warn about deprecation.
		
    """
	def pattern_to_regex(cls, *args, **kw):
    """

    		Warn about deprecation.
		
    """
