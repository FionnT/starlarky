def TargetDatabase:
    """
    A database of targets known to this project.
    """
    def ExternalResult(NamedTuple):
    """
    TargetDatabase.Result
    """
2021-03-02 20:52:16,308 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:52:16,308 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:52:16,308 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:52:16,308 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:52:16,308 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:52:16,308 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:52:16,308 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:52:16,308 : INFO : tokenize_signature : --> do i ever get here?
    def define_local_target(
        self,
        domain: str,
        name: str,
        targets: Sequence[str],
        pageid: FileId,
        title: Sequence[n.InlineNode],
        html5_id: str,
    ) -> None:
        """
         If multiple target names are given, prefer placing the one with the most periods
         into referring RefRole nodes. This is an odd heuristic, but should work for now.
         e.g. if a RefRole links to "-v", we want it to get normalized to "mongod.-v" if that's
         what gets resolved.

        """
    def reset(self, config: "ProjectConfig") -> None:
        """
        Reset this database to a "blank" state with intersphinx inventories defined by
                   the given ProjectConfig instance.
        """
    def generate_inventory(self, base_url: str) -> intersphinx.Inventory:
        """
        /
        """
    def load(cls, config: "ProjectConfig") -> "TargetDatabase":
        """
        Create a TargetDatabase with the intersphinx inventories specified by the given
                   ProjectConfig.
        """
def ProjectInterface(Protocol):
    """
    An empty ProjectInterface implementation for testing.
    """
    def __init__(self) -> None:
