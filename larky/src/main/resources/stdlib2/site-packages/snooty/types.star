def EmbeddedRstParser(Protocol):
    """
    Normalize targets to allow easy matching against the target
           database: normalize whitespace.
    """
def SnootyError(Exception):
    """
     "key" must *exactly* match an identifier with which this asset is referred to in source text.

    """
    def __hash__(self) -> int:
        """
        Return True iff the file exists and it's of a file type which should be uploaded
                   (e.g. an image).
        """
    def data(self) -> bytes:
        """
        StaticAsset
        """
    def __load(self) -> None:
        """
        untitled
        """
    def source_path(self) -> Path:
        """
         added support for projects that do not have "source" folder.

        """
    def config_path(self) -> Path:
        """
        snooty.toml
        """
    def get_fileid(self, path: PurePath) -> FileId:
        """
         Ensure that we transform any Windows-style paths into a Posix-style FileId

        """
    def open(cls, root: Path) -> Tuple["ProjectConfig", List[Diagnostic]]:
        """
        snooty.toml
        """
    def render_constants(self) -> Tuple["ProjectConfig", List[Diagnostic]]:
        """
        utf-8
        """
    def substitute(self, source: str) -> Tuple[str, List[Diagnostic]]:
        """
        Substitute all placeholders within a string.
        """
        def handle_match(match: Match[str]) -> str:
            """
            Replace a given placeholder match with a value from the project
                           configuration. Log a warning if it's not defined.
            """
