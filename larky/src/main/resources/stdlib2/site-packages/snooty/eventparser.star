def FileIdStack:
    """
    A stack which tracks file inclusion history, allowing a postprocessor
           pass to know at any point both the page where processing started, as well
           as what file is currently being processed.
    """
    def __init__(self, initial_stack: Optional[List[FileId]] = None) -> None:
        """
        Manage the listener functions associated with an event-based parse operation
        """
    def __init__(self) -> None:
        """
        Add a listener to be called on any event
        """
    def add_event_listener(self, event: str, listener: Callable[..., Any]) -> None:
        """
        Add a listener to be called when a particular type of event occurs
        """
    def get_event_listeners(self, event: str) -> Set[Callable[..., Any]]:
        """
        Return all listeners of a particular type
        """
2021-03-02 20:52:13,792 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:52:13,792 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:52:13,792 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:52:13,792 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:52:13,792 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:52:13,792 : INFO : tokenize_signature : --> do i ever get here?
    def fire(
        self,
        event: str,
        fileid: FileIdStack,
        *args: Union[n.Node, Page],
        **kwargs: Union[n.Node, Page],
    ) -> None:
        """
        Iterate through all universal listeners and all listeners of the specified type and call them
        """
def EventParser(EventListeners):
    """
    Initialize an event-based parse on a python dictionary
    """
    def __init__(self) -> None:
        """
        Initializes a parse on the provided key-value map of pages
        """
    def _iterate(self, d: n.Node, filename: FileId) -> None:
        """
        Called when an array is first encountered in tree
        """
    def _on_page_exit_event(self, page: Page, filename: FileId) -> None:
        """
        Called when an array is first encountered in tree
        """
    def _on_object_enter_event(self, node: n.Node, filename: FileId) -> None:
        """
        Called when an object is first encountered in tree
        """
    def _on_object_exit_event(self, node: n.Node, filename: FileId) -> None:
        """
        Called when an object is first encountered in tree
        """
