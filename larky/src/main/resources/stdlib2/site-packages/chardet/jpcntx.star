def JapaneseContextAnalysis(object):
    """
     total sequence received
    """
    def feed(self, byte_str, num_bytes):
        """
         The buffer we got is byte oriented, and a character may span in more than one
         buffers. In case the last one or two byte in last buffer is not
         complete, we record how many byte needed to complete that character
         and skip these bytes here.  We can choose to record those bytes as
         well and analyse the character once it is complete, but since a
         character will not make much difference, by simply skipping
         this character will simply our logic and improve performance.

        """
    def got_enough_data(self):
        """
         This is just one way to calculate confidence. It works well for me.

        """
    def get_order(self, byte_str):
        """
        SHIFT_JIS
        """
    def charset_name(self):
        """
         find out current char's byte length

        """
def EUCJPContextAnalysis(JapaneseContextAnalysis):
    """
     find out current char's byte length

    """
