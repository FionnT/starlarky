def IPAppCrashHandler(CrashHandler):
    """
    sys.excepthook for IPython itself, leaves a detailed report on disk.
    """
    def __init__(self, app):
        """
        'https://github.com/ipython/ipython/issues'
        """
    def make_report(self,traceback):
        """
        Return a string containing a crash report.
        """
def LocateIPythonApp(BaseIPythonApplication):
    """
    print the path to the IPython dir
    """
    def start(self):
        """
        u'ipython'
        """
    def _classes_default(self):
        """
        This has to be in a method, for TerminalIPythonApp to be available.
        """
    def _quick_changed(self, change):
        """
        'new'
        """
    def _force_interact_changed(self, change):
        """
        'new'
        """
    def _file_to_run_changed(self, change):
        """
        'new'
        """
    def parse_command_line(self, argv=None):
        """
        override to allow old '-pylab' flag with deprecation warning
        """
    def initialize(self, argv=None):
        """
        Do actions after construct, but before starting the app.
        """
    def init_shell(self):
        """
        initialize the InteractiveShell instance
        """
    def init_banner(self):
        """
        optionally display the banner
        """
    def _pylab_changed(self, name, old, new):
        """
        Replace --pylab='inline' with --pylab='auto'
        """
    def start(self):
        """
         perform any prexec steps:

        """
def load_default_config(ipython_dir=None):
    """
    Load the default config file from the default ipython_dir.

        This is useful for embedded shells.
    
    """
