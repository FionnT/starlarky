def ShimWarning(Warning):
    """
    A warning to show when a module has moved, and a shim is in its place.
    """
def ShimImporter(object):
    """
    Import hook for a shim.
    
        This ensures that submodule imports return the real target module,
        not a clone that will confuse `is` and `isinstance` checks.
    
    """
    def __init__(self, src, mirror):
        """
        get the name of the mirrored module
        """
    def find_module(self, fullname, path=None):
        """
        Return self if we should be used to import the module.
        """
    def load_module(self, fullname):
        """
        Import the mirrored module, and insert it into sys.modules
        """
def ShimModule(types.ModuleType):
    """
    mirror
    """
    def __path__(self):
        """
        Don't produce __spec__ until requested
        """
    def __dir__(self):
        """
        Ensure __all__ is always defined
        """
    def __getattr__(self, key):
        """
         Use the equivalent of import_item(name), see below

        """
