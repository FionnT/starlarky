def create_typestr2type_dicts(dont_include_in_type2typestr=["lambda"]):
    """
    Return dictionaries mapping lower case typename (e.g. 'tuple') to type
        objects from the types package, and vice versa.
    """
def is_type(obj, typestr_or_type):
    """
    is_type(obj, typestr_or_type) verifies if obj is of a certain type. It
        can take strings or actual python types for the second argument, i.e.
        'tuple'<->TupleType. 'all' matches all types.

        TODO: Should be extended for choosing more than one type.
    """
def show_hidden(str, show_all=False):
    """
    Return true for strings starting with single _ if show_all is true.
    """
def dict_dir(obj):
    """
    Produce a dictionary of an object's attributes. Builds on dir2 by
        checking that a getattr() call actually succeeds.
    """
2021-03-02 20:49:31,416 : INFO : tokenize_signature : --> do i ever get here?
def filter_ns(ns, name_pattern="*", type_pattern="all", ignore_case=True,
            show_all=True):
    """
    Filter a namespace dictionary by name pattern and item type.
    """
def list_namespace(namespace, type_pattern, filter, ignore_case=False, show_all=False):
    """
    Return dictionary of all objects in a namespace dictionary that match
        type_pattern and filter.
    """
