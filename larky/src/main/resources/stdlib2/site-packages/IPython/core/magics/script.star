def script_args(f):
    """
    single decorator for adding script args
    """
def ScriptMagics(Magics):
    """
    Magics for talking to scripts
    
        This defines a base `%%script` cell magic for running a cell
        with a program in a subprocess, and registers a few top-level
        magics that call %%script with common interpreters.
    
    """
    def _script_magics_default(self):
        """
        default to a common list of programs
        """
    def __init__(self, shell=None):
        """
        'cell'
        """
    def _make_script_magic(self, name):
        """
        make a named magic, that calls %%script with a particular program
        """
        def named_script_magic(line, cell):
            """
             if line, add it as cl-flags

            """
    def shebang(self, line, cell):
        """
        Run a cell via a shell command
        
                The `%%script` line is like the #! line of script,
                specifying a program (bash, perl, ruby, etc.) with which to run.
        
                The rest of the cell is run by that program.
        
                Examples
                --------
                ::
        
                    In [1]: %%script bash
                       ...: for i in 1 2 3; do
                       ...:   echo $i
                       ...: done
                    1
                    2
                    3
        
        """
    def _run_script(self, p, cell, to_close):
        """
        callback for running the script in the background
        """
    def killbgscripts(self, _nouse_=''):
        """
        Kill all BG processes started by %%script and its family.
        """
    def kill_bg_processes(self):
        """
        Kill all BG processes which are still running.
        """
    def _gc_bg_processes(self):
