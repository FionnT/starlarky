def __BuiltinUndefined(object): pass
    """
    'IPython.core.interactiveshell.InteractiveShellABC'
    """
    def __init__(self, shell=None):
        """
         We define this to track if a single BuiltinTrap is nested.
         Only turn off the trap when the outermost call to __exit__ is made.

        """
    def __enter__(self):
        """
         I return self, so callers can use add_builtin in a with clause.

        """
    def __exit__(self, type, value, traceback):
        """
         Returning False will cause exceptions to propagate

        """
    def add_builtin(self, key, value):
        """
        Add a builtin and save the original.
        """
    def remove_builtin(self, key, orig):
        """
        Remove an added builtin and re-set the original.
        """
    def activate(self):
        """
        Store ipython references in the __builtin__ namespace.
        """
    def deactivate(self):
        """
        Remove any builtins which might have been added by add_builtins, or
                restore overwritten ones to their previous values.
        """
