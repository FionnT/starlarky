def editor(self, filename, linenum=None, wait=True):
    """
    Open the default editor at the given filename and linenumber.

        This is IPython's default editor hook, you can use it as an example to
        write your own modified one.  To set your own editor function as the
        new editor hook, call ip.set_hook('editor',yourfunc).
    """
def synchronize_with_editor(self, filename, linenum, column):
    """
     Dispatch calls to a chain of commands until some func can handle it

        Usage: instantiate, execute "add" to add commands (with optional
        priority), execute normally via f() calling mechanism.

    
    """
    def __init__(self,commands=None):
        """
         Command chain is called just like normal func.

                This will call all funcs in chain with the same args as were given to
                this function, and return the result of first func that didn't raise
                TryNext
        """
    def __str__(self):
        """
         Add a func to the cmd chain with given priority 
        """
    def __iter__(self):
        """
         Return all objects in chain.

                Handy if the objects are not callable.
        
        """
def shutdown_hook(self):
    """
     default shutdown hook

        Typically, shutdown hooks should raise TryNext so all shutdown ops are done
    
    """
def late_startup_hook(self):
    """
     Executed after ipython has been constructed and configured

    
    """
def show_in_pager(self, data, start, screen_lines):
    """
     Run a string through pager 
    """
def pre_prompt_hook(self):
    """
     Run before displaying the next prompt

        Use this e.g. to display output from asynchronous operations (in order
        to not mess up text entry)
    
    """
def pre_run_code_hook(self):
    """
     Executed before running the (prefiltered) code in IPython 
    """
def clipboard_get(self):
    """
     Get text from the clipboard.
    
    """
