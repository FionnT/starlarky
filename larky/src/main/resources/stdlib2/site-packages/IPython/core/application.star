def ProfileAwareConfigLoader(PyFileConfigLoader):
    """
    A Python file config loader that is aware of IPython profiles.
    """
    def load_subconfig(self, fname, path=None, profile=None):
        """
        u'ipython'
        """
    def _config_file_name_default(self):
        """
        '-'
        """
    def _config_file_name_changed(self, change):
        """
        'new'
        """
    def _config_file_paths_default(self):
        """
        Path to an extra config file to load.
    
            If specified, load this config file in addition to any other IPython config.
    
        """
    def _extra_config_file_changed(self, change):
        """
        'old'
        """
    def _profile_changed(self, change):
        """
        u'config'
        """
    def _ipython_dir_default(self):
        """
        'name'
        """
    def _profile_dir_default(self):
        """
         avoid recursion

        """
    def _config_files_default(self):
        """
        Whether to install the default config files into the profile dir.
                If a new profile is being created, and IPython contains config files for that
                profile, then they will be staged into the new directory.  Otherwise,
                default config files will be automatically generated.
        
        """
    def __init__(self, **kwargs):
        """
         ensure current working directory exists

        """
    def initialize_subcommand(self, subc, argv=None):
        """
        Subcommand `ipython {sub}` is deprecated and will be removed 
        in future versions.
        """
    def init_crash_handler(self):
        """
        Create a crash handler, typically setting sys.excepthook to it.
        """
        def unset_crashhandler():
            """
            this is sys.excepthook after init_crashhandler
        
                    set self.verbose_crash=True to use our full crashhandler, instead of
                    a regular traceback with a short message (crash_handler_lite)
        
            """
    def _ipython_dir_changed(self, change):
        """
        'old'
        """
    def load_config_file(self, suppress_errors=IPYTHON_SUPPRESS_CONFIG_ERRORS):
        """
        Load the config file.

                By default, errors in loading config are handled, and a warning
                printed on screen. For testing, the suppress_errors option is set
                to False, so errors will make tests fail.

                `suppress_errors` default value is to be `None` in which case the
                behavior default to the one of `traitlets.Application`.

                The default value can be set :
                   - to `False` by setting 'IPYTHON_SUPPRESS_CONFIG_ERRORS' environment variable to '0', or 'false' (case insensitive).
                   - to `True` by setting 'IPYTHON_SUPPRESS_CONFIG_ERRORS' environment variable to '1' or 'true' (case insensitive).
                   - to `None` by setting 'IPYTHON_SUPPRESS_CONFIG_ERRORS' environment variable to '' (empty string) or leaving it unset.

                Any other value are invalid, and will make IPython exit with a non-zero return code.
        
        """
    def init_profile_dir(self):
        """
        initialize the profile dir
        """
    def init_config_files(self):
        """
        [optionally] copy default config files into profile dir.
        """
    def stage_default_config_file(self):
        """
        auto generate default config file, and stage it into the profile.
        """
    def initialize(self, argv=None):
        """
         don't hook up crash handler before parsing command-line

        """
