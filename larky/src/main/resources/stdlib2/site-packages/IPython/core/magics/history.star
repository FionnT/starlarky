def HistoryMagics(Magics):
    """
    '-n'
    """
    def history(self, parameter_s = ''):
        """
        Print input history (_i<n> variables), with most recent last.

                By default, input history is printed without line numbers so it can be
                directly pasted into an editor. Use -n to show them.

                By default, all input history from the current session is displayed.
                Ranges of history can be indicated using the syntax:
        
                ``4``
                    Line 4, current session
                ``4-6``
                    Lines 4-6, current session
                ``243/1-5``
                    Lines 1-5, session 243
                ``~2/7``
                    Line 7, session 2 before current
                ``~8/1-~6/5``
                    From the first line of 8 sessions ago, to the fifth line of 6
                    sessions ago.
        
                Multiple ranges can be entered, separated by spaces

                The same syntax is used by %macro, %save, %edit, %rerun

                Examples
                --------
                ::

                  In [6]: %history -n 4-6
                  4:a = 12
                  5:print a**2
                  6:%history -n 4-6

        
        """
        def _format_lineno(session, line):
            """
            Helper function to format line numbers properly.
            """
    def recall(self, arg):
        """
        r"""Repeat a command, or get command to input line for editing.

                %recall and %rep are equivalent.

                - %recall (no arguments):

                Place a string version of last computation result (stored in the
                special '_' variable) to the next input prompt. Allows you to create
                elaborate command lines without using copy-paste::

                     In[1]: l = ["hei", "vaan"]
                     In[2]: "".join(l)
                    Out[2]: heivaan
                     In[3]: %recall
                     In[4]: heivaan_ <== cursor blinking

                %recall 45

                Place history line 45 on the next input prompt. Use %hist to find
                out the number.

                %recall 1-4

                Combine the specified lines into one cell, and place it on the next
                input prompt. See %history for the slice syntax.

                %recall foo+bar

                If foo+bar can be evaluated in the user namespace, the result is
                placed at the next input prompt. Otherwise, the history is searched
                for lines which contain that substring, and the most recent one is
                placed at the next input prompt.
        
        """
    def rerun(self, parameter_s=''):
        """
        Re-run previous input

                By default, you can specify ranges of input history to be repeated
                (as with %history). With no arguments, it will repeat the last line.

                Options:

                  -l <n> : Repeat the last n lines of input, not including the
                  current command.

                  -g foo : Repeat the most recent line which contains foo
        
        """
