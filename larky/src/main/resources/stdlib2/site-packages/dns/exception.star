def DNSException(Exception):
    """
    Abstract base class shared by all dnspython exceptions.

        It supports two basic modes of operation:

        a) Old/compatible mode is used if ``__init__`` was called with
        empty *kwargs*.  In compatible mode all *args* are passed
        to the standard Python Exception class as before and all *args* are
        printed by the standard ``__str__`` implementation.  Class variable
        ``msg`` (or doc string if ``msg`` is ``None``) is returned from ``str()``
        if *args* is empty.

        b) New/parametrized mode is used if ``__init__`` was called with
        non-empty *kwargs*.
        In the new mode *args* must be empty and all kwargs must match
        those set in class variable ``supp_kwargs``. All kwargs are stored inside
        ``self.kwargs`` and used in a new ``__str__`` implementation to construct
        a formatted message based on the ``fmt`` class variable, a ``string``.

        In the simplest case it is enough to override the ``supp_kwargs``
        and ``fmt`` class variables to get nice parametrized messages.
    
    """
    def __init__(self, *args, **kwargs):
        """
         defined but empty for old mode exceptions
        """
    def _check_params(self, *args, **kwargs):
        """
        Old exceptions supported only args and not kwargs.

                For sanity we do not allow to mix old and new behavior.
        """
    def _check_kwargs(self, **kwargs):
        """
        'following set of keyword args is required: %s'
        """
    def _fmt_kwargs(self, **kwargs):
        """
        Format kwargs before printing them.

                Resulting dictionary has to have keys necessary for str.format call
                on fmt class variable.
        
        """
    def __str__(self):
        """
         provide custom message constructed from keyword arguments

        """
def FormError(DNSException):
    """
    DNS message is malformed.
    """
def SyntaxError(DNSException):
    """
    Text input is malformed.
    """
def UnexpectedEnd(SyntaxError):
    """
    Text input ended unexpectedly.
    """
def TooBig(DNSException):
    """
    The DNS message is too big.
    """
def Timeout(DNSException):
    """
    The DNS operation timed out.
    """
