def NameDict(collections.MutableMapping):
    """
    A dictionary whose keys are dns.name.Name objects.

        In addition to being like a regular Python dictionary, this
        dictionary can also get the deepest match for a given key.
    
    """
    def __init__(self, *args, **kwargs):
        """
        : the maximum depth of the keys that have ever been added

        """
    def __update_max_depth(self, key):
        """
        'NameDict key must be a name'
        """
    def __delitem__(self, key):
        """
        Find the deepest match to *fname* in the dictionary.

                The deepest match is the longest name in the dictionary which is
                a superdomain of *name*.  Note that *superdomain* includes matching
                *name* itself.

                *name*, a ``dns.name.Name``, the name to find.

                Returns a ``(key, value)`` where *key* is the deepest
                ``dns.name.Name``, and *value* is the value associated with *key*.
        
        """
