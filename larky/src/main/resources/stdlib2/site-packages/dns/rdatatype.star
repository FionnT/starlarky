def UnknownRdatatype(dns.exception.DNSException):
    """
    DNS resource record type is unknown.
    """
def from_text(text):
    """
    Convert text into a DNS rdata type value.

        The input text can be a defined DNS RR type mnemonic or
        instance of the DNS generic type syntax.

        For example, "NS" and "TYPE2" will both result in a value of 2.

        Raises ``dns.rdatatype.UnknownRdatatype`` if the type is unknown.

        Raises ``ValueError`` if the rdata type value is not >= 0 and <= 65535.

        Returns an ``int``.
    
    """
def to_text(value):
    """
    Convert a DNS rdata type value to text.

        If the value has a known mnemonic, it will be used, otherwise the
        DNS generic type syntax will be used.

        Raises ``ValueError`` if the rdata type value is not >= 0 and <= 65535.

        Returns a ``str``.
    
    """
def is_metatype(rdtype):
    """
    True if the specified type is a metatype.

        *rdtype* is an ``int``.

        The currently defined metatypes are TKEY, TSIG, IXFR, AXFR, MAILA,
        MAILB, ANY, and OPT.

        Returns a ``bool``.
    
    """
def is_singleton(rdtype):
    """
    Is the specified type a singleton type?

        Singleton types can only have a single rdata in an rdataset, or a single
        RR in an RRset.

        The currently defined singleton types are CNAME, DNAME, NSEC, NXT, and
        SOA.

        *rdtype* is an ``int``.

        Returns a ``bool``.
    
    """
def register_type(rdtype, rdtype_text, is_singleton=False):  # pylint: disable=redefined-outer-name
    """
     pylint: disable=redefined-outer-name
    """
