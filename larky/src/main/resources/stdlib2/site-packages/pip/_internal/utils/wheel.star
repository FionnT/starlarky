def WheelMetadata(DictMetadata):
    """
    Metadata provider that maps metadata decoding exceptions to our
        internal exception type.
    
    """
    def __init__(self, metadata, wheel_name):
        """
         type: (Dict[str, bytes], str) -> None

        """
    def get_metadata(self, name):
        """
         type: (str) -> str

        """
def pkg_resources_distribution_for_wheel(wheel_zip, name, location):
    """
     type: (ZipFile, str, str) -> Distribution

    """
def parse_wheel(wheel_zip, name):
    """
     type: (ZipFile, str) -> Tuple[str, Message]

    """
def wheel_dist_info_dir(source, name):
    """
     type: (ZipFile, str) -> str

    """
def read_wheel_metadata_file(source, path):
    """
     type: (ZipFile, str) -> bytes

    """
def wheel_metadata(source, dist_info_dir):
    """
     type: (ZipFile, str) -> Message

    """
def wheel_version(wheel_data):
    """
     type: (Message) -> Tuple[int, ...]

    """
def check_compatibility(version, name):
    """
     type: (Tuple[int, ...], str) -> None

    """
