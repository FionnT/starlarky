def SpinnerInterface(object):
    """
     type: () -> None

    """
    def finish(self, final_status):
        """
         type: (str) -> None

        """
def InteractiveSpinner(SpinnerInterface):
    """
    -\\|/
    """
    def _write(self, status):
        """
         type: (str) -> None

        """
    def spin(self):
        """
         type: () -> None

        """
    def finish(self, final_status):
        """
         type: (str) -> None

        """
def NonInteractiveSpinner(SpinnerInterface):
    """
     type: (str, float) -> None

    """
    def _update(self, status):
        """
         type: (str) -> None

        """
    def spin(self):
        """
         type: () -> None

        """
    def finish(self, final_status):
        """
         type: (str) -> None

        """
def RateLimiter(object):
    """
     type: (float) -> None

    """
    def ready(self):
        """
         type: () -> bool

        """
    def reset(self):
        """
         type: () -> None

        """
def open_spinner(message):
    """
     type: (str) -> Iterator[SpinnerInterface]
     Interactive spinner goes directly to sys.stdout rather than being routed
     through the logging system, but it acts like it has level INFO,
     i.e. it's only displayed if we're at level INFO or better.
     Non-interactive spinner goes through the logging system, so it is always
     in sync with logging configuration.

    """
def hidden_cursor(file):
    """
     type: (IO[str]) -> Iterator[None]
     The Windows terminal does not support the hide/show cursor ANSI codes,
     even via colorama. So don't even try.

    """
