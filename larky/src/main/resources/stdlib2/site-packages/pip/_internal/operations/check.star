def create_package_set_from_installed(**kwargs):
    """
     type: (**Any) -> Tuple[PackageSet, bool]

    """
def check_package_set(package_set, should_ignore=None):
    """
     type: (PackageSet, Optional[Callable[[str], bool]]) -> CheckResult

    """
def check_install_conflicts(to_install):
    """
     type: (List[InstallRequirement]) -> ConflictDetails

    """
def _simulate_installation_of(to_install, package_set):
    """
     type: (List[InstallRequirement], PackageSet) -> Set[str]

    """
def _create_whitelist(would_be_installed, package_set):
    """
     type: (Set[str], PackageSet) -> Set[str]

    """
