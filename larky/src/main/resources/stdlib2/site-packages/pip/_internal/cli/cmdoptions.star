def raise_option_error(parser, option, msg):
    """
     type: (OptionParser, Option, str) -> None

    """
def make_option_group(group, parser):
    """
     type: (Dict[str, Any], ConfigOptionParser) -> OptionGroup

    """
def check_install_build_global(options, check_options=None):
    """
     type: (Values, Optional[Values]) -> None

    """
    def getname(n):
        """
         type: (str) -> Optional[Any]

        """
def check_dist_restriction(options, check_target=False):
    """
     type: (Values, bool) -> None

    """
def _path_option_check(option, opt, value):
    """
     type: (Option, str, str) -> str

    """
def PipOption(Option):
    """
    path
    """
def exists_action():
    """
     type: () -> Option

    """
def extra_index_url():
    """
     type: () -> Option

    """
def find_links():
    """
     type: () -> Option

    """
def trusted_host():
    """
     type: () -> Option

    """
def constraints():
    """
     type: () -> Option

    """
def requirements():
    """
     type: () -> Option

    """
def editable():
    """
     type: () -> Option

    """
def _handle_src(option, opt_str, value, parser):
    """
     type: (Option, str, str, OptionParser) -> None

    """
def _get_format_control(values, option):
    """
     type: (Values, Option) -> Any

    """
def _handle_no_binary(option, opt_str, value, parser):
    """
     type: (Option, str, str, OptionParser) -> None

    """
def _handle_only_binary(option, opt_str, value, parser):
    """
     type: (Option, str, str, OptionParser) -> None

    """
def no_binary():
    """
     type: () -> Option

    """
def only_binary():
    """
     type: () -> Option

    """
def _convert_python_version(value):
    """
     type: (str) -> Tuple[Tuple[int, ...], Optional[str]]

    """
def _handle_python_version(option, opt_str, value, parser):
    """
     type: (Option, str, str, OptionParser) -> None

    """
def add_target_python_options(cmd_opts):
    """
     type: (OptionGroup) -> None

    """
def make_target_python(options):
    """
     type: (Values) -> TargetPython

    """
def prefer_binary():
    """
     type: () -> Option

    """
def _handle_no_cache_dir(option, opt, value, parser):
    """
     type: (Option, str, str, OptionParser) -> None

    """
def _handle_build_dir(option, opt, value, parser):
    """
     type: (Option, str, str, OptionParser) -> None

    """
def _handle_no_use_pep517(option, opt, value, parser):
    """
     type: (Option, str, str, OptionParser) -> None

    """
def _handle_merge_hash(option, opt_str, value, parser):
    """
     type: (Option, str, str, OptionParser) -> None

    """
def check_list_path_option(options):
    """
     type: (Values) -> None

    """
