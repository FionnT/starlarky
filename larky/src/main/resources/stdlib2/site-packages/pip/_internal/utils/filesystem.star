    def NamedTemporaryFileResult(BinaryIO):
    """
     type: () -> BinaryIO

    """
def check_path_owner(path):
    """
     type: (str) -> bool
     If we don't have a way to check the effective uid of this process, then
     we'll just assume that we own the directory.

    """
def copy2_fixed(src, dest):
    """
     type: (str, str) -> None

    """
def is_socket(path):
    """
     type: (str) -> bool

    """
def adjacent_tmp_file(path, **kwargs):
    """
     type: (str, **Any) -> Iterator[NamedTemporaryFileResult]

    """
    def replace(src, dest):
        """
         type: (str, str) -> None

        """
def test_writable_dir(path):
    """
     type: (str) -> bool

    """
def _test_writable_dir_win(path):
    """
     type: (str) -> bool
     os.access doesn't work on Windows: http://bugs.python.org/issue2528
     and we can't use tempfile: http://bugs.python.org/issue22107

    """
def find_files(path, pattern):
    """
     type: (str, str) -> List[str]

    """
def file_size(path):
    """
     type: (str) -> Union[int, float]
     If it's a symlink, return 0.

    """
def format_file_size(path):
    """
     type: (str) -> str

    """
def directory_size(path):
    """
     type: (str) -> Union[int, float]

    """
def format_directory_size(path):
    """
     type: (str) -> str

    """
