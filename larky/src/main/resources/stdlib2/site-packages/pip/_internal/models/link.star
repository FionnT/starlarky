def Link(KeyBasedCompareMixin):
    """
    Represents a parsed link from a Package Index's simple URL
    
    """
2021-03-02 20:50:29,990 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:50:29,991 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:50:29,991 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:50:29,991 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:50:29,991 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:50:29,991 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:50:29,991 : INFO : tokenize_signature : --> do i ever get here?
    def __init__(
        self,
        url,                   # type: str
        comes_from=None,       # type: Optional[Union[str, HTMLPage]]
        requires_python=None,  # type: Optional[str]
        yanked_reason=None,    # type: Optional[Text]
        cache_link_parsing=True,  # type: bool
    ):
        """
         type: (...) -> None

        """
    def __str__(self):
        """
         type: () -> str

        """
    def __repr__(self):
        """
         type: () -> str

        """
    def url(self):
        """
         type: () -> str

        """
    def filename(self):
        """
         type: () -> str

        """
    def file_path(self):
        """
         type: () -> str

        """
    def scheme(self):
        """
         type: () -> str

        """
    def netloc(self):
        """
         type: () -> str

        """
    def path(self):
        """
         type: () -> str

        """
    def splitext(self):
        """
         type: () -> Tuple[str, str]

        """
    def ext(self):
        """
         type: () -> str

        """
    def url_without_fragment(self):
        """
         type: () -> str

        """
    def egg_fragment(self):
        """
         type: () -> Optional[str]

        """
    def subdirectory_fragment(self):
        """
         type: () -> Optional[str]

        """
    def hash(self):
        """
         type: () -> Optional[str]

        """
    def hash_name(self):
        """
         type: () -> Optional[str]

        """
    def show_url(self):
        """
         type: () -> str

        """
    def is_file(self):
        """
         type: () -> bool

        """
    def is_existing_dir(self):
        """
         type: () -> bool

        """
    def is_wheel(self):
        """
         type: () -> bool

        """
    def is_vcs(self):
        """
         type: () -> bool

        """
    def is_yanked(self):
        """
         type: () -> bool

        """
    def has_hash(self):
        """
         type: () -> bool

        """
    def is_hash_allowed(self, hashes):
        """
         type: (Optional[Hashes]) -> bool

        """
