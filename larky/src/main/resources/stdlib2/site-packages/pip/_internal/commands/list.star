def ListCommand(IndexGroupCommand):
    """

        List installed packages, including editables.

        Packages are listed in a case-insensitive sorted order.
    
    """
    def add_options(self):
        """
         type: () -> None

        """
    def _build_package_finder(self, options, session):
        """
         type: (Values, PipSession) -> PackageFinder

        """
    def run(self, options, args):
        """
         type: (Values, List[str]) -> int

        """
    def get_outdated(self, packages, options):
        """
         type: (List[Distribution], Values) -> List[Distribution]

        """
    def get_uptodate(self, packages, options):
        """
         type: (List[Distribution], Values) -> List[Distribution]

        """
    def get_not_required(self, packages, options):
        """
         type: (List[Distribution], Values) -> List[Distribution]

        """
    def iter_packages_latest_infos(self, packages, options):
        """
         type: (List[Distribution], Values) -> Iterator[Distribution]

        """
            def latest_info(dist):
                """
                 type: (Distribution) -> Distribution

                """
    def output_package_listing(self, packages, options):
        """
         type: (List[Distribution], Values) -> None

        """
    def output_package_listing_columns(self, data, header):
        """
         type: (List[List[str]], List[str]) -> None
         insert the header first: we need to know the size of column names

        """
def format_for_columns(pkgs, options):
    """
     type: (List[Distribution], Values) -> Tuple[List[List[str]], List[str]]

    """
def format_for_json(packages, options):
    """
     type: (List[Distribution], Values) -> str

    """
