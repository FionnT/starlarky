def PipProvider(AbstractProvider):
    """
     type: Factory

    """
    def identify(self, dependency):
        """
         type: (Union[Requirement, Candidate]) -> str

        """
2021-03-02 20:50:38,559 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:50:38,560 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:50:38,560 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:50:38,560 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:50:38,560 : INFO : tokenize_signature : --> do i ever get here?
    def get_preference(
        self,
        resolution,  # type: Optional[Candidate]
        candidates,  # type: Sequence[Candidate]
        information  # type: Sequence[Tuple[Requirement, Candidate]]
    ):
        """
         type: (...) -> Any

        """
    def find_matches(self, requirements):
        """
         type: (Sequence[Requirement]) -> Iterable[Candidate]

        """
        def _eligible_for_upgrade(name):
            """
             type: (str) -> bool

            """
    def is_satisfied_by(self, requirement, candidate):
        """
         type: (Requirement, Candidate) -> bool

        """
    def get_dependencies(self, candidate):
        """
         type: (Candidate) -> Sequence[Requirement]

        """
