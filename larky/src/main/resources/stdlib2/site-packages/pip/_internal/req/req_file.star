def ParsedRequirement(object):
    """
     type:str

    """
def ParsedLine(object):
    """
     type: str

    """
2021-03-02 20:50:37,512 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:50:37,512 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:50:37,512 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:50:37,512 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:50:37,512 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:50:37,512 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:50:37,512 : INFO : tokenize_signature : --> do i ever get here?
def parse_requirements(
    filename,  # type: str
    session,  # type: PipSession
    finder=None,  # type: Optional[PackageFinder]
    comes_from=None,  # type: Optional[str]
    options=None,  # type: Optional[optparse.Values]
    constraint=False,  # type: bool
):
    """
     type: (...) -> Iterator[ParsedRequirement]

    """
def preprocess(content):
    """
     type: (Text) -> ReqFileLines

    """
2021-03-02 20:50:37,513 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:50:37,513 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:50:37,513 : INFO : tokenize_signature : --> do i ever get here?
def handle_requirement_line(
    line,  # type: ParsedLine
    options=None,  # type: Optional[optparse.Values]
):
    """
     type: (...) -> ParsedRequirement

     preserve for the nested code path

    """
2021-03-02 20:50:37,514 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:50:37,514 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:50:37,514 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:50:37,514 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:50:37,514 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:50:37,515 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:50:37,515 : INFO : tokenize_signature : --> do i ever get here?
def handle_option_line(
    opts,  # type: Values
    filename,  # type: str
    lineno,  # type: int
    finder=None,  # type: Optional[PackageFinder]
    options=None,  # type: Optional[optparse.Values]
    session=None,  # type: Optional[PipSession]
):
    """
     type:  (...) -> None


    """
2021-03-02 20:50:37,516 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:50:37,516 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:50:37,516 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:50:37,516 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:50:37,516 : INFO : tokenize_signature : --> do i ever get here?
def handle_line(
    line,  # type: ParsedLine
    options=None,  # type: Optional[optparse.Values]
    finder=None,  # type: Optional[PackageFinder]
    session=None,  # type: Optional[PipSession]
):
    """
     type: (...) -> Optional[ParsedRequirement]

    """
def RequirementsFileParser(object):
    """
     type: PipSession

    """
    def parse(self, filename, constraint):
        """
         type: (str, bool) -> Iterator[ParsedLine]

        """
    def _parse_and_recurse(self, filename, constraint):
        """
         type: (str, bool) -> Iterator[ParsedLine]

        """
    def _parse_file(self, filename, constraint):
        """
         type: (str, bool) -> Iterator[ParsedLine]

        """
def get_line_parser(finder):
    """
     type: (Optional[PackageFinder]) -> LineParser

    """
    def parse_line(line):
        """
         type: (Text) -> Tuple[str, Values]
         Build new parser for each line since it accumulates appendable
         options.

        """
def break_args_options(line):
    """
     type: (Text) -> Tuple[str, Text]

    """
def OptionParsingError(Exception):
    """
     type: (str) -> None

    """
def build_parser():
    """
     type: () -> optparse.OptionParser

    """
    def parser_exit(self, msg):
        """
         type: (Any, str) -> NoReturn

        """
def join_lines(lines_enum):
    """
     type: (ReqFileLines) -> ReqFileLines

    """
def ignore_comments(lines_enum):
    """
     type: (ReqFileLines) -> ReqFileLines

    """
def expand_env_variables(lines_enum):
    """
     type: (ReqFileLines) -> ReqFileLines

    """
def get_file_content(url, session, comes_from=None):
    """
     type: (str, PipSession, Optional[str]) -> Tuple[str, Text]

    """
