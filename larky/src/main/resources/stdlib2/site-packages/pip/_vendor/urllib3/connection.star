    def BaseSSLError(BaseException):
    """
     Python 3: not a no-op, we're adding this to the namespace so it can be imported.

    """
    def ConnectionError(Exception):
    """
    http
    """
def DummyConnection(object):
    """
    Used to detect a failed ConnectionCls import.
    """
def HTTPConnection(_HTTPConnection, object):
    """

        Based on httplib.HTTPConnection but provides an extra constructor
        backwards-compatibility layer between older and newer Pythons.

        Additional keyword parameters are used to configure attributes of the connection.
        Accepted parameters include:

          - ``strict``: See the documentation on :class:`urllib3.connectionpool.HTTPConnectionPool`
          - ``source_address``: Set the source address for the current connection.
          - ``socket_options``: Set specific options on the underlying socket. If not specified, then
            defaults are loaded from ``HTTPConnection.default_socket_options`` which includes disabling
            Nagle's algorithm (sets TCP_NODELAY to 1) unless the connection is behind a proxy.

            For example, if you wish to enable TCP Keep Alive in addition to the defaults,
            you might pass::

                HTTPConnection.default_socket_options + [
                    (socket.SOL_SOCKET, socket.SO_KEEPALIVE, 1),
                ]

            Or you may want to disable the defaults by passing an empty list (e.g., ``[]``).
    
    """
    def __init__(self, *args, **kw):
        """
        strict
        """
    def host(self):
        """

                Getter method to remove any trailing dots that indicate the hostname is an FQDN.

                In general, SSL certificates don't include the trailing dot indicating a
                fully-qualified domain name, and thus, they don't validate properly when
                checked against a domain name that includes the dot. In addition, some
                servers may not expect to receive the trailing dot when provided.

                However, the hostname with trailing dot is critical to DNS resolution; doing a
                lookup with the trailing dot will properly only resolve the appropriate FQDN,
                whereas a lookup without a trailing dot will search the system's search domain
                list. Thus, it's important to keep the original host around for use only in
                those cases where it's appropriate (i.e., when doing DNS lookup to establish the
                actual TCP connection across which we're going to send HTTP requests).
        
        """
    def host(self, value):
        """

                Setter for the `host` property.

                We assume that only urllib3 uses the _dns_host attribute; httplib itself
                only uses `host`, and it seems reasonable that other libraries follow suit.
        
        """
    def _new_conn(self):
        """
         Establish a socket connection and set nodelay settings on it.

                :return: New socket connection.
        
        """
    def _prepare_conn(self, conn):
        """
         Google App Engine's httplib does not define _tunnel_host

        """
    def connect(self):
        """
        Send a request to the server
        """
    def request_chunked(self, method, url, body=None, headers=None):
        """

                Alternative to the common request method, which sends the
                body with chunked encoding and not as one block
        
        """
def HTTPSConnection(HTTPConnection):
    """
    https
    """
2021-03-02 20:51:26,193 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:51:26,193 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:51:26,193 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:51:26,193 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:51:26,193 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:51:26,193 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:51:26,193 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:51:26,193 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:51:26,193 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:51:26,193 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:51:26,194 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:51:26,194 : INFO : tokenize_signature : --> do i ever get here?
    def __init__(
        self,
        host,
        port=None,
        key_file=None,
        cert_file=None,
        key_password=None,
        strict=None,
        timeout=socket._GLOBAL_DEFAULT_TIMEOUT,
        ssl_context=None,
        server_hostname=None,
        **kw
    ):
        """
         Required property for Google AppEngine 1.9.0 which otherwise causes
         HTTPS requests to go out as HTTP. (See Issue #356)

        """
2021-03-02 20:51:26,194 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:51:26,194 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:51:26,194 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:51:26,194 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:51:26,194 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:51:26,194 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:51:26,194 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:51:26,194 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:51:26,195 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:51:26,195 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:51:26,195 : INFO : tokenize_signature : --> do i ever get here?
    def set_cert(
        self,
        key_file=None,
        cert_file=None,
        cert_reqs=None,
        key_password=None,
        ca_certs=None,
        assert_hostname=None,
        assert_fingerprint=None,
        ca_cert_dir=None,
        ca_cert_data=None,
    ):
        """

                This method should only be called once, before the connection is used.
        
        """
    def connect(self):
        """
         Add certificate verification

        """
def _match_hostname(cert, asserted_hostname):
    """
    Certificate did not match expected hostname: %s. Certificate: %s
    """
