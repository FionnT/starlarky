def CharDistributionAnalysis(object):
    """
     Mapping table to get frequency order from char order (get from
     GetOrder())

    """
    def reset(self):
        """
        reset analyser, clear any state
        """
    def feed(self, char, char_len):
        """
        feed a character with known length
        """
    def get_confidence(self):
        """
        return confidence based on existing data
        """
    def got_enough_data(self):
        """
         It is not necessary to receive all data to draw conclusion.
         For charset detection, certain amount of data is enough

        """
    def get_order(self, byte_str):
        """
         We do not handle characters based on the original encoding string,
         but convert this encoding string to a number, here called order.
         This allows multiple encodings of a language to share one frequency
         table.

        """
def EUCTWDistributionAnalysis(CharDistributionAnalysis):
    """
     for euc-TW encoding, we are interested
       first  byte range: 0xc4 -- 0xfe
       second byte range: 0xa1 -- 0xfe
     no validation needed here. State machine has done that

    """
def EUCKRDistributionAnalysis(CharDistributionAnalysis):
    """
     for euc-KR encoding, we are interested
       first  byte range: 0xb0 -- 0xfe
       second byte range: 0xa1 -- 0xfe
     no validation needed here. State machine has done that

    """
def GB2312DistributionAnalysis(CharDistributionAnalysis):
    """
     for GB2312 encoding, we are interested
      first  byte range: 0xb0 -- 0xfe
      second byte range: 0xa1 -- 0xfe
     no validation needed here. State machine has done that

    """
def Big5DistributionAnalysis(CharDistributionAnalysis):
    """
     for big5 encoding, we are interested
       first  byte range: 0xa4 -- 0xfe
       second byte range: 0x40 -- 0x7e , 0xa1 -- 0xfe
     no validation needed here. State machine has done that

    """
def SJISDistributionAnalysis(CharDistributionAnalysis):
    """
     for sjis encoding, we are interested
       first  byte range: 0x81 -- 0x9f , 0xe0 -- 0xfe
       second byte range: 0x40 -- 0x7e,  0x81 -- oxfe
     no validation needed here. State machine has done that

    """
def EUCJPDistributionAnalysis(CharDistributionAnalysis):
    """
     for euc-JP encoding, we are interested
       first  byte range: 0xa0 -- 0xfe
       second byte range: 0xa1 -- 0xfe
     no validation needed here. State machine has done that

    """
