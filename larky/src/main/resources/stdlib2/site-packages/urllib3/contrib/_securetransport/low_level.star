def _cf_data_from_bytes(bytestring):
    """

        Given a bytestring, create a CFData object from it. This CFData object must
        be CFReleased by the caller.
    
    """
def _cf_dictionary_from_tuples(tuples):
    """

        Given a list of Python tuples, create an associated CFDictionary.
    
    """
def _cf_string_to_unicode(value):
    """

        Creates a Unicode string from a CFString object. Used entirely for error
        reporting.

        Yes, it annoys me quite a lot that this function is this complex.
    
    """
def _assert_no_error(error, exception_class=None):
    """

        Checks the return code and throws an exception if there is an error to
        report
    
    """
def _cert_array_from_pem(pem_bundle):
    """

        Given a bundle of certs in PEM format, turns them into a CFArray of certs
        that can be used to validate a cert chain.
    
    """
def _is_cert(item):
    """

        Returns True if a given CFTypeRef is a certificate.
    
    """
def _is_identity(item):
    """

        Returns True if a given CFTypeRef is an identity.
    
    """
def _temporary_keychain():
    """

        This function creates a temporary Mac keychain that we can use to work with
        credentials. This keychain uses a one-time password and a temporary file to
        store the data. We expect to have one keychain per socket. The returned
        SecKeychainRef must be freed by the caller, including calling
        SecKeychainDelete.

        Returns a tuple of the SecKeychainRef and the path to the temporary
        directory that contains it.
    
    """
def _load_items_from_file(keychain, path):
    """

        Given a single file, loads all the trust objects from it into arrays and
        the keychain.
        Returns a tuple of lists: the first list is a list of identities, the
        second a list of certs.
    
    """
def _load_client_cert_chain(keychain, *paths):
    """

        Load certificates and maybe keys from a number of files. Has the end goal
        of returning a CFArray containing one SecIdentityRef, and then zero or more
        SecCertificateRef objects, suitable for use as a client certificate trust
        chain.
    
    """
