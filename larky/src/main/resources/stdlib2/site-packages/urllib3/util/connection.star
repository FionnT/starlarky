def is_connection_dropped(conn):  # Platform-specific
    """
     Platform-specific
    """
2021-03-02 20:52:19,730 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:52:19,731 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:52:19,731 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:52:19,731 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:52:19,731 : INFO : tokenize_signature : --> do i ever get here?
def create_connection(
    address,
    timeout=socket._GLOBAL_DEFAULT_TIMEOUT,
    source_address=None,
    socket_options=None,
):
    """
    Connect to *address* and return the socket object.

        Convenience function.  Connect to *address* (a 2-tuple ``(host,
        port)``) and return the socket object.  Passing the optional
        *timeout* parameter will set the timeout on the socket instance
        before attempting to connect.  If no *timeout* is supplied, the
        global default timeout setting returned by :func:`getdefaulttimeout`
        is used.  If *source_address* is set it must be a tuple of (host, port)
        for the socket to bind as a source address before making the connection.
        An host of '' or port 0 tells the OS to use the default.
    
    """
def _set_socket_options(sock, options):
    """
    This function is designed to work in the context of
        getaddrinfo, where family=socket.AF_UNSPEC is the default and
        will perform a DNS search for both IPv6 and IPv4 records.
    """
def _has_ipv6(host):
    """
     Returns True if the system can bind an IPv6 address. 
    """
