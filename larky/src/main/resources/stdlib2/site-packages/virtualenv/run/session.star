def Session(object):
    """
    Represents a virtual environment creation session
    """
    def __init__(self, verbosity, app_data, interpreter, creator, seeder, activators):
        """
        The verbosity of the run
        """
    def interpreter(self):
        """
        Create a virtual environment based on this reference interpreter
        """
    def creator(self):
        """
        The creator used to build the virtual environment (must be compatible with the interpreter)
        """
    def seeder(self):
        """
        The mechanism used to provide the seed packages (pip, setuptools, wheel)
        """
    def activators(self):
        """
        Activators used to generate activations scripts
        """
    def run(self):
        """
        create virtual environment via %s
        """
    def _seed(self):
        """
        add seed packages via %s
        """
    def _activate(self):
        """
        add activators for %s
        """
    def __enter__(self):
        """
        =
        """
def _Debug(object):
    """
    lazily populate debug
    """
    def __init__(self, creator):
