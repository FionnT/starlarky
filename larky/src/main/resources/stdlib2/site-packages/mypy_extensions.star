def _check_fails(cls, other):
    """
    '__name__'
    """
def _dict_new(cls, *args, **kwargs):
    """
    'total'
    """
def _TypedDictMeta(type):
    """
     Create new typed dict class object.
     This method is called directly when TypedDict is subclassed,
     or via _typeddict_new when TypedDict is instantiated. This way
     TypedDict supports all three syntaxes described in its docstring.
     Subclasses and instances of TypedDict return actual dictionaries
     via _dict_new.

    """
def Arg(type=Any, name=None):
    """
    A normal positional argument
    """
def DefaultArg(type=Any, name=None):
    """
    A positional argument with a default value
    """
def NamedArg(type=Any, name=None):
    """
    A keyword-only argument
    """
def DefaultNamedArg(type=Any, name=None):
    """
    A keyword-only argument with a default value
    """
def VarArg(type=Any):
    """
    A *args-style variadic positional argument
    """
def KwArg(type=Any):
    """
    A **kwargs-style variadic keyword argument
    """
def NoReturn: pass
    """
     TODO: We may want to try to properly apply this to any type
     variables left over...

    """
def _FlexibleAliasClsApplied:
