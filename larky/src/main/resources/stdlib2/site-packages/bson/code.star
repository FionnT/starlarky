def Code(str):
    """
    BSON's JavaScript code type.

        Raises :class:`TypeError` if `code` is not an instance of
        :class:`basestring` (:class:`str` in python 3) or `scope`
        is not ``None`` or an instance of :class:`dict`.

        Scope variables can be set by passing a dictionary as the `scope`
        argument or by using keyword arguments. If a variable is set as a
        keyword argument it will override any setting for that variable in
        the `scope` dictionary.

        :Parameters:
          - `code`: A string containing JavaScript code to be evaluated or another
            instance of Code. In the latter case, the scope of `code` becomes this
            Code's :attr:`scope`.
          - `scope` (optional): dictionary representing the scope in which
            `code` should be evaluated - a mapping from identifiers (as
            strings) to values. Defaults to ``None``. This is applied after any
            scope associated with a given `code` above.
          - `**kwargs` (optional): scope variables can also be passed as
            keyword arguments. These are applied after `scope` and `code`.

        .. versionchanged:: 3.4
          The default value for :attr:`scope` is ``None`` instead of ``{}``.

    
    """
    def __new__(cls, code, scope=None, **kwargs):
        """
        code must be an 
        instance of %s
        """
    def scope(self):
        """
        Scope dictionary for this instance or ``None``.
        
        """
    def __repr__(self):
        """
        Code(%s, %r)
        """
    def __eq__(self, other):
