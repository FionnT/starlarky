def str_flags_to_int(str_flags):
    """
    i
    """
def Regex(object):
    """
    BSON regular expression data.
    """
    def from_native(cls, regex):
        """
        Convert a Python regular expression into a ``Regex`` instance.

                Note that in Python 3, a regular expression compiled from a
                :class:`str` has the ``re.UNICODE`` flag set. If it is undesirable
                to store this flag in a BSON regular expression, unset it first::

                  >>> pattern = re.compile('.*')
                  >>> regex = Regex.from_native(pattern)
                  >>> regex.flags ^= re.UNICODE
                  >>> db.collection.insert({'pattern': regex})

                :Parameters:
                  - `regex`: A regular expression object from ``re.compile()``.

                .. warning::
                   Python regular expressions use a different syntax and different
                   set of flags than MongoDB, which uses `PCRE`_. A regular
                   expression retrieved from the server may not compile in
                   Python, or may match a different set of strings in Python than
                   when used in a MongoDB query.

                .. _PCRE: http://www.pcre.org/
        
        """
    def __init__(self, pattern, flags=0):
        """
        BSON regular expression data.

                This class is useful to store and retrieve regular expressions that are
                incompatible with Python's regular expression dialect.

                :Parameters:
                  - `pattern`: string
                  - `flags`: (optional) an integer bitmask, or a string of flag
                    characters like "im" for IGNORECASE and MULTILINE
        
        """
    def __eq__(self, other):
        """
        Regex(%r, %r)
        """
    def try_compile(self):
        """
        Compile this :class:`Regex` as a Python regular expression.

                .. warning::
                   Python regular expressions use a different syntax and different
                   set of flags than MongoDB, which uses `PCRE`_. A regular
                   expression retrieved from the server may not compile in
                   Python, or may match a different set of strings in Python than
                   when used in a MongoDB query. :meth:`try_compile()` may raise
                   :exc:`re.error`.

                .. _PCRE: http://www.pcre.org/
        
        """
