def DBRef(object):
    """
    A reference to a document stored in MongoDB.
    
    """
    def __init__(self, collection, id, database=None, _extra={}, **kwargs):
        """
        Initialize a new :class:`DBRef`.

                Raises :class:`TypeError` if `collection` or `database` is not
                an instance of :class:`basestring` (:class:`str` in python 3).
                `database` is optional and allows references to documents to work
                across databases. Any additional keyword arguments will create
                additional fields in the resultant embedded document.

                :Parameters:
                  - `collection`: name of the collection the document is stored in
                  - `id`: the value of the document's ``"_id"`` field
                  - `database` (optional): name of the database to reference
                  - `**kwargs` (optional): additional keyword arguments will
                    create additional, custom fields

                .. mongodoc:: dbrefs
        
        """
    def collection(self):
        """
        Get the name of this DBRef's collection as unicode.
        
        """
    def id(self):
        """
        Get this DBRef's _id.
        
        """
    def database(self):
        """
        Get the name of this DBRef's database.

                Returns None if this DBRef doesn't specify a database.
        
        """
    def __getattr__(self, key):
        """
         Have to provide __setstate__ to avoid
         infinite recursion since we override
         __getattr__.

        """
    def __setstate__(self, state):
        """
        Get the SON document representation of this DBRef.

                Generally not needed by application developers
        
        """
    def __repr__(self):
        """

        """
    def __eq__(self, other):
        """
        Get a hash value for this :class:`DBRef`.
        """
    def __deepcopy__(self, memo):
        """
        Support function for `copy.deepcopy()`.
        """
