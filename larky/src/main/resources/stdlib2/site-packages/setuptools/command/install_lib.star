def install_lib(orig.install_lib):
    """
    Don't add compiled flags to filenames of non-Python files
    """
    def run(self):
        """
         always compile, in case we have any extension stubs to deal with

        """
    def get_exclusions(self):
        """

                Return a collections.Sized collections.Container of paths to be
                excluded for single_version_externally_managed installations.
        
        """
    def _exclude_pkg_path(self, pkg, exclusion_path):
        """

                Given a package name and exclusion path within that package,
                compute the full exclusion path.
        
        """
    def _all_packages(pkg_name):
        """

                >>> list(install_lib._all_packages('foo.bar.baz'))
                ['foo.bar.baz', 'foo.bar', 'foo']
        
        """
    def _get_SVEM_NSPs(self):
        """

                Get namespace packages (list) but only for
                single_version_externally_managed installations and empty otherwise.
        
        """
    def _gen_exclusion_paths():
        """

                Generate file paths to be excluded for namespace packages (bytecode
                cache files).
        
        """
2021-03-02 20:52:33,231 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:52:33,232 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:52:33,232 : INFO : tokenize_signature : --> do i ever get here?
    def copy_tree(
            self, infile, outfile,
            preserve_mode=1, preserve_times=1, preserve_symlinks=0, level=1
    ):
        """
         Exclude namespace package __init__.py* files from the output


        """
        def pf(src, dst):
            """
            Skipping installation of %s (namespace package)
            """
    def get_outputs(self):
