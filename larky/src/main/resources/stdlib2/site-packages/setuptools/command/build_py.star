    def Mixin2to3:
    """
    do nothing
    """
def make_writable(target):
    """
    Enhanced 'build_py' command that includes data files with packages

        The data files are specified via a 'package_data' argument to 'setup()'.
        See 'setuptools.dist.Distribution' for more details.

        Also, this version of the 'build_py' command allows you to specify both
        'py_modules' and 'packages' in the same setup operation.
    
    """
    def finalize_options(self):
        """
        'data_files'
        """
    def run(self):
        """
        Build modules, packages, and copy data files to build directory
        """
    def __getattr__(self, attr):
        """
        lazily compute data files
        """
    def build_module(self, module, module_file, package):
        """
         avoid errors on Python 2 when unicode is passed (#190)

        """
    def _get_data_files(self):
        """
        Generate list of '(package,src_dir,build_dir,filenames)' tuples
        """
    def _get_pkg_data_files(self, package):
        """
         Locate package source directory

        """
    def find_data_files(self, package, src_dir):
        """
        Return filenames for package's data files in 'src_dir'
        """
    def build_package_data(self):
        """
        Copy data files into build directory
        """
    def analyze_manifest(self):
        """
         Locate package source directory

        """
    def get_data_files(self):
        """
         Lazily compute data files in _get_data_files() function.
        """
    def check_package(self, package, package_dir):
        """
        Check namespace packages' __init__ for declare_namespace
        """
    def initialize_options(self):
        """
        Filter filenames for package's data files in 'src_dir'
        """
    def _get_platform_patterns(spec, package, src_dir):
        """

                yield platform-specific path patterns (suitable for glob
                or fn_match) from a glob-based spec (such as
                self.package_data or self.exclude_package_data)
                matching package in src_dir.
        
        """
def _unique_everseen(iterable, key=None):
    """
    List unique elements, preserving order. Remember all elements ever seen.
    """
def assert_relative(path):
    """

            Error: setup script specifies an absolute path:

                %s

            setup() arguments must *always* be /-separated paths relative to the
            setup.py directory, *never* absolute paths.
        
    """
