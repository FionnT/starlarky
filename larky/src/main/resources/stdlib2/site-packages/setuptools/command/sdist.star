def walk_revctrl(dirname=''):
    """
    Find all files under revision control
    """
def sdist(sdist_add_defaults, orig.sdist):
    """
    Smart sdist that finds anything supported by revision control
    """
    def run(self):
        """
        'egg_info'
        """
    def initialize_options(self):
        """
         only needed on Python prior to 3.6.

        """
    def make_distribution(self):
        """

                Workaround for #516
        
        """
    def _remove_os_link():
        """

                In a context, remove and restore os.link if it exists
        
        """
        def NoValue:
    """
    'link'
    """
    def __read_template_hack(self):
        """
         This grody hack closes the template file (MANIFEST.in) if an
          exception occurs during read_template.
         Doing so prevents an error when easy_install attempts to delete the
          file.

        """
    def _add_defaults_optional(self):
        """
        'pyproject.toml'
        """
    def _add_defaults_python(self):
        """
        getting python files
        """
    def _safe_data_files(self, build_py):
        """

                Extracting data_files from build_py is known to cause
                infinite recursion errors when `include_package_data`
                is enabled, so suppress it in that case.
        
        """
    def _add_data_files(self, data_files):
        """

                Add data files as found in build_py.data_files.
        
        """
    def _add_defaults_data_files(self):
        """
        data_files contains unexpected objects
        """
    def check_readme(self):
        """
        standard file not found: should have one of 
        """
    def make_release_tree(self, base_dir, files):
        """
         Save any egg_info command line options used to create this sdist

        """
    def _manifest_is_not_generated(self):
        """
         check for special comment used in 2.7.1 and higher

        """
    def read_manifest(self):
        """
        Read the manifest file (named by 'self.manifest') and use it to
                fill in 'self.filelist', the list of files to include in the source
                distribution.
        
        """
    def check_license(self):
        """
        Checks if license_file' or 'license_files' is configured and adds any
                valid paths to 'self.filelist'.
        
        """
