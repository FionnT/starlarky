def SetupRequirementsError(BaseException):
    """

            Replace
            distutils.dist.Distribution with this class
            for the duration of this context.
        
    """
def _to_str(s):
    """

        Convert a filename to a string (on Python 2, explicitly
        a byte string, not Unicode) as distutils checks for the
        exact type str.
    
    """
def _get_immediate_subdirectories(a_dir):
    """
     Supply a default setup.py

    """
def _BuildMetaBackend(object):
    """
    '--global-option'
    """
    def _get_build_requires(self, config_settings, requirements):
        """
        'egg_info'
        """
    def run_setup(self, setup_script='setup.py'):
        """
         Note that we can reuse our build directory between calls
         Correctness comes first, then optimization later

        """
    def get_requires_for_build_wheel(self, config_settings=None):
        """
        'wheel'
        """
    def get_requires_for_build_sdist(self, config_settings=None):
        """
        'dist_info'
        """
2021-03-02 20:52:30,921 : INFO : tokenize_signature : --> do i ever get here?
    def _build_with_temp_dir(self, setup_command, result_extension,
                             result_directory, config_settings):
        """
         Build in a temporary directory, then copy to the target.

        """
2021-03-02 20:52:30,922 : INFO : tokenize_signature : --> do i ever get here?
    def build_wheel(self, wheel_directory, config_settings=None,
                    metadata_directory=None):
        """
        'bdist_wheel'
        """
    def build_sdist(self, sdist_directory, config_settings=None):
        """
        'sdist'
        """
def _BuildMetaLegacyBackend(_BuildMetaBackend):
    """
    Compatibility backend for setuptools

        This is a version of setuptools.build_meta that endeavors
        to maintain backwards
        compatibility with pre-PEP 517 modes of invocation. It
        exists as a temporary
        bridge between the old packaging mechanism and the new
        packaging mechanism,
        and will eventually be removed.
    
    """
    def run_setup(self, setup_script='setup.py'):
        """
         In order to maintain compatibility with scripts assuming that
         the setup.py script is in a directory on the PYTHONPATH, inject
         '' into sys.path. (pypa/setuptools#1642)

        """
