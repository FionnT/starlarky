def describe(article, value, name=None, verbose=False, capital=False):
    """
    Return string that describes a value

        Parameters
        ----------
        article : str or None
            A definite or indefinite article. If the article is
            indefinite (i.e. "a" or "an") the appropriate one
            will be infered. Thus, the arguments of ``describe``
            can themselves represent what the resulting string
            will actually look like. If None, then no article
            will be prepended to the result. For non-articled
            description, values that are instances are treated
            definitely, while classes are handled indefinitely.
        value : any
            The value which will be named.
        name : str or None (default: None)
            Only applies when ``article`` is "the" - this
            ``name`` is a definite reference to the value.
            By default one will be infered from the value's
            type and repr methods.
        verbose : bool (default: False)
            Whether the name should be concise or verbose. When
            possible, verbose names include the module, and/or
            class name where an object was defined.
        capital : bool (default: False)
            Whether the first letter of the article should
            be capitalized or not. By default it is not.

        Examples
        --------
        Indefinite description:

        >>> describe("a", object())
        'an object'
        >>> describe("a", object)
        'an object'
        >>> describe("a", type(object))
        'a type'

        Definite description:

        >>> describe("the", object())
        "the object at '0x10741f1b0'"
        >>> describe("the", object)
        "the type 'object'"
        >>> describe("the", type(object))
        "the type 'type'"

        Definitely named description:

        >>> describe("the", object(), "I made")
        'the object I made'
        >>> describe("the", object, "I will use")
        'the object I will use'
    
    """
def _prefix(value):
    """
    '.'
    """
def class_of(value):
    """
    Returns a string of the value's type with an indefinite article.

        For example 'an Image' or 'a PlotValue'.
    
    """
def add_article(name, definite=False, capital=False):
    """
    Returns the string with a prepended article.

        The input does not need to begin with a charater.

        Parameters
        ----------
        definite : bool (default: False)
            Whether the article is definite or not.
            Indefinite articles being 'a' and 'an',
            while 'the' is definite.
        capital : bool (default: False)
            Whether the added article should have
            its first letter capitalized or not.
    
    """
def repr_type(obj):
    """
    Return a string representation of a value and its type for readable

        error messages.
    
    """
