def ParserError(MarkedYAMLError):
    """
     Since writing a recursive-descendant parser is a straightforward task, we
     do not give many comments here.


    """
    def __init__(self):
        """
         Reset the state attributes (to clear self-references)

        """
    def check_event(self, *choices):
        """
         Check the type of the next event.

        """
    def peek_event(self):
        """
         Get the next event.

        """
    def get_event(self):
        """
         Get the next event and proceed further.

        """
    def parse_stream_start(self):
        """
         Parse the stream start.

        """
    def parse_implicit_document_start(self):
        """
         Parse an implicit document.

        """
    def parse_document_start(self):
        """
         Parse any extra document end indicators.

        """
    def parse_document_end(self):
        """
         Parse the document end.

        """
    def parse_document_content(self):
        """
        'YAML'
        """
    def parse_block_node(self):
        """
        while parsing a node
        """
    def parse_block_sequence_first_entry(self):
        """
        while parsing a block collection
        """
    def parse_indentless_sequence_entry(self):
        """
         block_mapping     ::= BLOCK-MAPPING_START
                               ((KEY block_node_or_indentless_sequence?)?
                               (VALUE block_node_or_indentless_sequence?)?)*
                               BLOCK-END


        """
    def parse_block_mapping_first_key(self):
        """
        while parsing a block mapping
        """
    def parse_block_mapping_value(self):
        """
         flow_sequence     ::= FLOW-SEQUENCE-START
                               (flow_sequence_entry FLOW-ENTRY)*
                               flow_sequence_entry?
                               FLOW-SEQUENCE-END
         flow_sequence_entry   ::= flow_node | KEY flow_node? (VALUE flow_node?)?

         Note that while production rules for both flow_sequence_entry and
         flow_mapping_entry are equal, their interpretations are different.
         For `flow_sequence_entry`, the part `KEY flow_node? (VALUE flow_node?)?`
         generate an inline mapping (set syntax).


        """
    def parse_flow_sequence_first_entry(self):
        """
        while parsing a flow sequence
        """
    def parse_flow_sequence_entry_mapping_key(self):
        """
         flow_mapping  ::= FLOW-MAPPING-START
                           (flow_mapping_entry FLOW-ENTRY)*
                           flow_mapping_entry?
                           FLOW-MAPPING-END
         flow_mapping_entry    ::= flow_node | KEY flow_node? (VALUE flow_node?)?


        """
    def parse_flow_mapping_first_key(self):
        """
        while parsing a flow mapping
        """
    def parse_flow_mapping_value(self):
        """
        ''
        """
