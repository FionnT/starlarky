def warnings(settings=None):
    """
     Warn when load() is called without Loader=...

    """
def YAMLLoadWarning(RuntimeWarning):
    """
    'YAMLLoadWarning'
    """
def scan(stream, Loader=Loader):
    """

        Scan a YAML stream and produce scanning tokens.
    
    """
def parse(stream, Loader=Loader):
    """

        Parse a YAML stream and produce parsing events.
    
    """
def compose(stream, Loader=Loader):
    """

        Parse the first YAML document in a stream
        and produce the corresponding representation tree.
    
    """
def compose_all(stream, Loader=Loader):
    """

        Parse all YAML documents in a stream
        and produce corresponding representation trees.
    
    """
def load(stream, Loader=None):
    """

        Parse the first YAML document in a stream
        and produce the corresponding Python object.
    
    """
def load_all(stream, Loader=None):
    """

        Parse all YAML documents in a stream
        and produce corresponding Python objects.
    
    """
def full_load(stream):
    """

        Parse the first YAML document in a stream
        and produce the corresponding Python object.

        Resolve all tags except those known to be
        unsafe on untrusted input.
    
    """
def full_load_all(stream):
    """

        Parse all YAML documents in a stream
        and produce corresponding Python objects.

        Resolve all tags except those known to be
        unsafe on untrusted input.
    
    """
def safe_load(stream):
    """

        Parse the first YAML document in a stream
        and produce the corresponding Python object.

        Resolve only basic YAML tags. This is known
        to be safe for untrusted input.
    
    """
def safe_load_all(stream):
    """

        Parse all YAML documents in a stream
        and produce corresponding Python objects.

        Resolve only basic YAML tags. This is known
        to be safe for untrusted input.
    
    """
def unsafe_load(stream):
    """

        Parse the first YAML document in a stream
        and produce the corresponding Python object.

        Resolve all tags, even those known to be
        unsafe on untrusted input.
    
    """
def unsafe_load_all(stream):
    """

        Parse all YAML documents in a stream
        and produce corresponding Python objects.

        Resolve all tags, even those known to be
        unsafe on untrusted input.
    
    """
2021-03-02 20:52:09,247 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:52:09,247 : INFO : tokenize_signature : --> do i ever get here?
def emit(events, stream=None, Dumper=Dumper,
        canonical=None, indent=None, width=None,
        allow_unicode=None, line_break=None):
    """

        Emit YAML parsing events into a stream.
        If stream is None, return the produced string instead.
    
    """
2021-03-02 20:52:09,247 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:52:09,247 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:52:09,248 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:52:09,248 : INFO : tokenize_signature : --> do i ever get here?
def serialize_all(nodes, stream=None, Dumper=Dumper,
        canonical=None, indent=None, width=None,
        allow_unicode=None, line_break=None,
        encoding=None, explicit_start=None, explicit_end=None,
        version=None, tags=None):
    """

        Serialize a sequence of representation trees into a YAML stream.
        If stream is None, return the produced string instead.
    
    """
def serialize(node, stream=None, Dumper=Dumper, **kwds):
    """

        Serialize a representation tree into a YAML stream.
        If stream is None, return the produced string instead.
    
    """
2021-03-02 20:52:09,248 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:52:09,249 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:52:09,249 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:52:09,249 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:52:09,249 : INFO : tokenize_signature : --> do i ever get here?
def dump_all(documents, stream=None, Dumper=Dumper,
        default_style=None, default_flow_style=False,
        canonical=None, indent=None, width=None,
        allow_unicode=None, line_break=None,
        encoding=None, explicit_start=None, explicit_end=None,
        version=None, tags=None, sort_keys=True):
    """

        Serialize a sequence of Python objects into a YAML stream.
        If stream is None, return the produced string instead.
    
    """
def dump(data, stream=None, Dumper=Dumper, **kwds):
    """

        Serialize a Python object into a YAML stream.
        If stream is None, return the produced string instead.
    
    """
def safe_dump_all(documents, stream=None, **kwds):
    """

        Serialize a sequence of Python objects into a YAML stream.
        Produce only basic YAML tags.
        If stream is None, return the produced string instead.
    
    """
def safe_dump(data, stream=None, **kwds):
    """

        Serialize a Python object into a YAML stream.
        Produce only basic YAML tags.
        If stream is None, return the produced string instead.
    
    """
2021-03-02 20:52:09,250 : INFO : tokenize_signature : --> do i ever get here?
def add_implicit_resolver(tag, regexp, first=None,
        Loader=None, Dumper=Dumper):
    """

        Add an implicit scalar detector.
        If an implicit scalar value matches the given regexp,
        the corresponding tag is assigned to the scalar.
        first is a sequence of possible initial characters or None.
    
    """
def add_path_resolver(tag, path, kind=None, Loader=None, Dumper=Dumper):
    """

        Add a path based resolver for the given tag.
        A path is a list of keys that forms a path
        to a node in the representation tree.
        Keys can be string values, integers, or None.
    
    """
def add_constructor(tag, constructor, Loader=None):
    """

        Add a constructor for the given tag.
        Constructor is a function that accepts a Loader instance
        and a node object and produces the corresponding Python object.
    
    """
def add_multi_constructor(tag_prefix, multi_constructor, Loader=None):
    """

        Add a multi-constructor for the given tag prefix.
        Multi-constructor is called for a node if its tag starts with tag_prefix.
        Multi-constructor accepts a Loader instance, a tag suffix,
        and a node object and produces the corresponding Python object.
    
    """
def add_representer(data_type, representer, Dumper=Dumper):
    """

        Add a representer for the given type.
        Representer is a function accepting a Dumper instance
        and an instance of the given data type
        and producing the corresponding representation node.
    
    """
def add_multi_representer(data_type, multi_representer, Dumper=Dumper):
    """

        Add a representer for the given type.
        Multi-representer is a function accepting a Dumper instance
        and an instance of the given data type or subtype
        and producing the corresponding representation node.
    
    """
def YAMLObjectMetadef(type):
    """

        The metaclass for YAMLObject.
    
    """
    def __init__(cls, name, bases, kwds):
        """
        'yaml_tag'
        """
def YAMLObject(metadef=YAMLObjectMetadef):
    """

        An object that can dump itself to a YAML stream
        and load itself from a YAML stream.
    
    """
    def from_yaml(cls, loader, node):
        """

                Convert a representation node to a Python object.
        
        """
    def to_yaml(cls, dumper, data):
        """

                Convert a Python object to a representation node.
        
        """
