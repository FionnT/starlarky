def ResolverError(YAMLError):
    """
    'tag:yaml.org,2002:str'
    """
    def __init__(self):
        """
        'yaml_implicit_resolvers'
        """
    def add_path_resolver(cls, tag, path, kind=None):
        """
         Note: `add_path_resolver` is experimental.  The API could be changed.
         `new_path` is a pattern that is matched against the path from the
         root to the node that is being considered.  `node_path` elements are
         tuples `(node_check, index_check)`.  `node_check` is a node class:
         `ScalarNode`, `SequenceNode`, `MappingNode` or `None`.  `None`
         matches any kind of a node.  `index_check` could be `None`, a boolean
         value, a string value, or a number.  `None` and `False` match against
         any _value_ of sequence and mapping nodes.  `True` matches against
         any _key_ of a mapping node.  A string `index_check` matches against
         a mapping value that corresponds to a scalar key which content is
         equal to the `index_check` value.  An integer `index_check` matches
         against a sequence value with the index equal to `index_check`.

        """
    def descend_resolver(self, current_node, current_index):
        """
        ''
        """
def Resolver(BaseResolver):
    """
    'tag:yaml.org,2002:bool'
    """
