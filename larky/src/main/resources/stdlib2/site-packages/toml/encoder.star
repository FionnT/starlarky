def dump(o, f, encoder=None):
    """
    Writes out dict as toml to a file

        Args:
            o: Object to dump into toml
            f: File descriptor where the toml should be stored
            encoder: The ``TomlEncoder`` to use for constructing the output string

        Returns:
            String containing the toml corresponding to dictionary

        Raises:
            TypeError: When anything other than file descriptor is passed
    
    """
def dumps(o, encoder=None):
    """
    Stringifies input dict as toml

        Args:
            o: Object to dump into toml
            encoder: The ``TomlEncoder`` to use for constructing the output string

        Returns:
            String containing the toml corresponding to dict

        Examples:
            ```python
            >>> import toml
            >>> output = {
            ... 'a': "I'm a string",
            ... 'b': ["I'm", "a", "list"],
            ... 'c': 2400
            ... }
            >>> toml.dumps(output)
            'a = "I\'m a string"\nb = [ "I\'m", "a", "list",]\nc = 2400\n'
            ```
    
    """
def _dump_str(v):
    """
    'decode'
    """
def _dump_float(v):
    """
    {}
    """
def _dump_time(v):
    """
     The TOML norm specifies that it's local time thus we drop the offset

    """
def TomlEncoder(object):
    """
    '+00:00'
    """
    def get_empty_table(self):
        """
        [
        """
    def dump_inline_table(self, section):
        """
        Preserve inline table in its compact syntax instead of expanding
                into subsection.

                https://github.com/toml-lang/toml#user-content-inline-table
        
        """
    def dump_value(self, v):
        """
         Lookup function corresponding to v's type

        """
    def dump_sections(self, o, sup):
        """

        """
def TomlPreserveInlineDictEncoder(TomlEncoder):
    """
    ,
    """
    def dump_list(self, v):
        """
        [
        """
def TomlNumpyEncoder(TomlEncoder):
    """
    {}
    """
def TomlPreserveCommentEncoder(TomlEncoder):
