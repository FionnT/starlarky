def _detect_pathlib_path(p):
    """
    r"([0-9]{2}):([0-9]{2}):([0-9]{2})(\.([0-9]{3,6}))?
    """
def TomlDecodeError(ValueError):
    """
    Base toml Exception / Error.
    """
    def __init__(self, msg, doc, pos):
        """
        '\n'
        """
def CommentValue(object):
    """
    \n
    """
    def __getitem__(self, key):
        """
        \n
        """
def _strictly_valid_num(n):
    """
    '_'
    """
def load(f, _dict=dict, decoder=None):
    """
    Parses named file or files as toml and returns a dictionary

        Args:
            f: Path to the file to open, array of files to read into single dict
               or a file descriptor
            _dict: (optional) Specifies the class of the returned toml dictionary
            decoder: The decoder to use

        Returns:
            Parsed toml file represented as a dictionary

        Raises:
            TypeError -- When f is invalid type
            TomlDecodeError: Error while decoding toml
            IOError / FileNotFoundError -- When an array with no valid (existing)
            (Python 2 / Python 3)          file paths is passed
    
    """
def loads(s, _dict=dict, decoder=None):
    """
    Parses string as toml

        Args:
            s: String to be parsed
            _dict: (optional) Specifies the class of the returned toml dictionary

        Returns:
            Parsed toml file represented as a dictionary

        Raises:
            TypeError: When a non-string is passed
            TomlDecodeError: Error while decoding toml
    
    """
def _load_date(val):
    """
    '.'
    """
def _load_unicode_escapes(v, hexbytes, prefix):
    """
    '\\'
    """
def _unescape(v):
    """
    Unescape characters in a TOML string.
    """
def InlineTableDict(object):
    """
    Sentinel subclass of dict for inline tables.
    """
def TomlDecoder(object):
    """
    Concrete sentinel subclass for inline tables.
                It is a subclass of _dict which is passed in dynamically at load
                time

                It is also a subclass of InlineTableDict
            
    """
2021-03-02 20:47:53,004 : INFO : tokenize_signature : --> do i ever get here?
    def load_inline_object(self, line, currentlevel, multikey=False,
                           multibackslash=False):
        """
        ,
        """
    def _get_split_on_quotes(self, line):
        """
        '"'
        """
    def load_line(self, line, currentlevel, multikey, multibackslash):
        """
        '='
        """
    def _load_line_multiline_str(self, p):
        """
        '['
        """
    def load_value(self, v, strictly_valid=True):
        """
        Empty value is invalid
        """
    def bounded_string(self, s):
        """
        \\
        """
    def _load_array_isstrarray(self, a):
        """
        ''
        """
    def load_array(self, a):
        """
        '['
        """
    def preserve_comment(self, line_no, key, comment, beginline):
