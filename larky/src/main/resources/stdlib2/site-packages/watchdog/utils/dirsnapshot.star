def DirectorySnapshotDiff(object):
    """

        Compares two directory snapshots and creates an object that represents
        the difference between the two snapshots.

        :param ref:
            The reference directory snapshot.
        :type ref:
            :class:`DirectorySnapshot`
        :param snapshot:
            The directory snapshot which will be compared
            with the reference snapshot.
        :type snapshot:
            :class:`DirectorySnapshot`
        :param ignore_device:
            A boolean indicating whether to ignore the device id or not.
            By default, a file may be uniquely identified by a combination of its first
            inode and its device id. The problem is that the device id may (or may not)
            change between system boots. This problem would cause the DirectorySnapshotDiff
            to think a file has been deleted and created again but it would be the
            exact same file.
            Set to True only if you are sure you will always use the same device.
        :type ignore_device:
            :class:`bool`
    
    """
    def __init__(self, ref, snapshot, ignore_device=False):
        """
         check that all unchanged paths have the same inode

        """
    def __str__(self):
        """
        '<{0} files(created={1}, deleted={2}, modified={3}, moved={4}),'
        ' folders(created={5}, deleted={6}, modified={7}, moved={8})>'

        """
    def files_created(self):
        """
        List of files that were created.
        """
    def files_deleted(self):
        """
        List of files that were deleted.
        """
    def files_modified(self):
        """
        List of files that were modified.
        """
    def files_moved(self):
        """

                List of files that were moved.

                Each event is a two-tuple the first item of which is the path
                that has been renamed to the second item in the tuple.
        
        """
    def dirs_modified(self):
        """

                List of directories that were modified.
        
        """
    def dirs_moved(self):
        """

                List of directories that were moved.

                Each event is a two-tuple the first item of which is the path
                that has been renamed to the second item in the tuple.
        
        """
    def dirs_deleted(self):
        """

                List of directories that were deleted.
        
        """
    def dirs_created(self):
        """

                List of directories that were created.
        
        """
def DirectorySnapshot(object):
    """

        A snapshot of stat information of files in a directory.

        :param path:
            The directory path for which a snapshot should be taken.
        :type path:
            ``str``
        :param recursive:
            ``True`` if the entire directory tree should be included in the
            snapshot; ``False`` otherwise.
        :type recursive:
            ``bool``
        :param stat:
            Use custom stat function that returns a stat structure for path.
            Currently only st_dev, st_ino, st_mode and st_mtime are needed.

            A function taking a ``path`` as argument which will be called
            for every entry in the directory tree.
        :param listdir:
            Use custom listdir function. For details see ``os.scandir`` if available, else ``os.listdir``.
    
    """
2021-03-02 20:51:58,220 : INFO : tokenize_signature : --> do i ever get here?
2021-03-02 20:51:58,220 : INFO : tokenize_signature : --> do i ever get here?
    def __init__(self, path, recursive=True,
                 stat=default_stat,
                 listdir=scandir):
        """
         Directory may have been deleted between finding it in the directory
         list of its parent and trying to delete its contents. If this
         happens we treat it as empty. Likewise if the directory was replaced
         with a file of the same name (less likely, but possible).

        """
    def paths(self):
        """

                Set of file/directory paths in the snapshot.
        
        """
    def path(self, id):
        """

                Returns path for id. None if id is unknown to this snapshot.
        
        """
    def inode(self, path):
        """
         Returns an id for path. 
        """
    def isdir(self, path):
        """

                Returns a stat information object for the specified path from
                the snapshot.

                Attached information is subject to change. Do not use unless
                you specify `stat` in constructor. Use :func:`inode`, :func:`mtime`,
                :func:`isdir` instead.

                :param path:
                    The path for which stat information should be obtained
                    from a snapshot.
        
        """
    def __sub__(self, previous_dirsnap):
        """
        Allow subtracting a DirectorySnapshot object instance from
                another.

                :returns:
                    A :class:`DirectorySnapshotDiff` object.
        
        """
    def __str__(self):
        """
        Class to implement an empty snapshot. This is used together with
            DirectorySnapshot and DirectorySnapshotDiff in order to get all the files/folders
            in the directory as created.
    
        """
    def path(_):
        """
        Mock up method to return the path of the received inode. As the snapshot
                is intended to be empty, it always returns None.

                :returns:
                    None.
        
        """
    def paths(self):
        """
        Mock up method to return a set of file/directory paths in the snapshot. As
                the snapshot is intended to be empty, it always returns an empty set.

                :returns:
                    An empty set.
        
        """
