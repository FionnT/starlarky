def OVERLAPPED(ctypes.Structure):
    """
    'Internal'
    """
def _errcheck_bool(value, func, args):
    """
    kernel32
    """
def FILE_NOTIFY_INFORMATION(ctypes.Structure):
    """
    NextEntryOffset
    """
def _parse_event_buffer(readBuffer, nBytes):
    """
     filename = ctypes.wstring_at(ptr, fni.FileNameLength)

    """
def _is_observed_path_deleted(handle, path):
    """
     Comparison of observed path and actual path, returned by
     GetFinalPathNameByHandleW. If directory moved to the trash bin, or
     deleted, actual path will not be equal to observed path.

    """
def _generate_observed_path_deleted_event():
    """
     Create synthetic event for notify that observed directory is deleted

    """
def get_directory_handle(path):
    """
    Returns a Windows handle to the specified directory path.
    """
def close_directory_handle(handle):
    """
     force ReadDirectoryChangesW to return
    """
def read_directory_changes(handle, path, recursive):
    """
    Read changes to the directory using the specified directory handle.

        http://timgolden.me.uk/pywin32-docs/win32file__ReadDirectoryChangesW_meth.html
    
    """
def WinAPINativeEvent(object):
    """
    <%s: action=%d, src_path=%r>
    """
def read_events(handle, path, recursive):
