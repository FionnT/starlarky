def InotifyEmitter(EventEmitter):
    """

        inotify(7)-based event emitter.

        :param event_queue:
            The event queue to fill with events.
        :param watch:
            A watch object representing the directory to monitor.
        :type watch:
            :class:`watchdog.observers.api.ObservedWatch`
        :param timeout:
            Read events blocking timeout (in seconds).
        :type timeout:
            ``float``
    
    """
    def __init__(self, event_queue, watch, timeout=DEFAULT_EMITTER_TIMEOUT):
        """
         If "full_events" is true, then the method will report unmatched move events as separate events
         This behavior is by default only called by a InotifyFullEmitter

        """
    def _decode_path(self, path):
        """
         Decode path only if unicode string was passed to this emitter. 
        """
def InotifyFullEmitter(InotifyEmitter):
    """

        inotify(7)-based event emitter. By default this class produces move events even if they are not matched
        Such move events will have a ``None`` value for the unmatched part.

        :param event_queue:
            The event queue to fill with events.
        :param watch:
            A watch object representing the directory to monitor.
        :type watch:
            :class:`watchdog.observers.api.ObservedWatch`
        :param timeout:
            Read events blocking timeout (in seconds).
        :type timeout:
            ``float``
    
    """
    def __init__(self, event_queue, watch, timeout=DEFAULT_EMITTER_TIMEOUT):
        """

            Observer thread that schedules watching directories and dispatches
            calls to event handlers.
    
        """
    def __init__(self, timeout=DEFAULT_OBSERVER_TIMEOUT, generate_full_events=False):
