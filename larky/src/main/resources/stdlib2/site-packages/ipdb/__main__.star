def _init_pdb(context=None, commands=[]):
    """
    IPDB_CONTEXT_SIZE
    """
def wrap_sys_excepthook():
    """
     make sure we wrap it only once or we would end up with a cycle
      BdbQuit_excepthook.excepthook_ori == BdbQuit_excepthook

    """
def set_trace(frame=None, context=None, cond=True):
    """
    'shell'
    """
def get_context_from_config():
    """
    ipdb
    """
def ConfigFile(object):
    """

        Filehandle wrapper that adds a "[ipdb]" section to the start of a config
        file so that users don't actually have to manually add a [ipdb] section.
        Works with configparser versions from both Python 2 and 3
    
    """
    def __init__(self, filepath):
        """
         Python 2.7 (Older dot versions)

        """
    def readline(self):
        """
        ''
        """
    def next(self):
        """
         Python 3

        """
    def __iter__(self):
        """
        [ipdb]\n
        """
def get_config():
    """

        Get ipdb config file settings.
        All available config files are read.  If settings are in multiple configs,
        the last value encountered wins.  Values specified on the command-line take
        precedence over all config file settings.
        Returns: A ConfigParser object.
    
    """
def post_mortem(tb=None):
    """
     sys.exc_info() returns (type, value, traceback) if an exception is
     being handled, otherwise it returns None

    """
def pm():
    """
    \
    usage: python -m ipdb [-c command] ... pyfile [arg] ...

    Debug the Python program given by pyfile.

    Initial commands are read from .pdbrc files in your home directory
    and in the current directory, if they exist.  Commands supplied with
    -c are executed after commands from .pdbrc files.

    To let the script run until an exception occurs, use "-c continue".
    To let the script run up to a given line X in the debugged file, use
    "-c 'until X'"
    ipdb version %s.
    """
def main():
    """
    'hc:'
    """
