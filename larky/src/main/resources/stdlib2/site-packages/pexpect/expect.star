def Expecter(object):
    """
     A value of -1 means to use the figure from spawn, which should
     be None or a positive number.

    """
    def do_search(self, window, freshlen):
        """
         Found a match

        """
    def existing_data(self):
        """
         First call from a new call to expect_loop or expect_async.
         self.searchwindowsize may have changed.
         Treat all data as fresh.

        """
    def new_data(self, data):
        """
         A subsequent call, after a call to existing_data.

        """
    def eof(self, err=None):
        """
        '\nsearcher: %s'
        """
    def timeout(self, err=None):
        """
        '\nsearcher: %s'
        """
    def errored(self):
        """
        Blocking expect
        """
def searcher_string(object):
    """
    '''This is a plain string search helper for the spawn.expect_any() method.
        This helper class is for speed. For more powerful regex patterns
        see the helper class, searcher_re.

        Attributes:

            eof_index     - index of EOF, or -1
            timeout_index - index of TIMEOUT, or -1

        After a successful match by the search() method the following attributes
        are available:

            start - index into the buffer, first byte of match
            end   - index into the buffer, first byte after match
            match - the matching string itself

        '''
    """
    def __init__(self, strings):
        """
        '''This creates an instance of searcher_string. This argument 'strings'
                may be a list; a sequence of strings; or the EOF or TIMEOUT types. '''
        """
    def __str__(self):
        """
        '''This returns a human-readable string that represents the state of
                the object.'''
        """
    def search(self, buffer, freshlen, searchwindowsize=None):
        """
        '''This searches 'buffer' for the first occurrence of one of the search
                strings.  'freshlen' must indicate the number of bytes at the end of
                'buffer' which have not been searched before. It helps to avoid
                searching the same, possibly big, buffer over and over again.

                See class spawn for the 'searchwindowsize' argument.

                If there is a match this returns the index of that string, and sets
                'start', 'end' and 'match'. Otherwise, this returns -1. '''
        """
def searcher_re(object):
    """
    '''This is regular expression string search helper for the
        spawn.expect_any() method. This helper class is for powerful
        pattern matching. For speed, see the helper class, searcher_string.

        Attributes:

            eof_index     - index of EOF, or -1
            timeout_index - index of TIMEOUT, or -1

        After a successful match by the search() method the following attributes
        are available:

            start - index into the buffer, first byte of match
            end   - index into the buffer, first byte after match
            match - the re.match object returned by a successful re.search

        '''
    """
    def __init__(self, patterns):
        """
        '''This creates an instance that searches for 'patterns' Where
                'patterns' may be a list or other sequence of compiled regular
                expressions, or the EOF or TIMEOUT types.'''
        """
    def __str__(self):
        """
        '''This returns a human-readable string that represents the state of
                the object.'''
        """
    def search(self, buffer, freshlen, searchwindowsize=None):
        """
        '''This searches 'buffer' for the first occurrence of one of the regular
                expressions. 'freshlen' must indicate the number of bytes at the end of
                'buffer' which have not been searched before.

                See class spawn for the 'searchwindowsize' argument.

                If there is a match this returns the index of that string, and sets
                'start', 'end' and 'match'. Otherwise, returns -1.'''
        """
